{"version":3,"sources":["app/models/paginations.ts","app/api/agent.ts","app/models/activity.ts","app/models/profile.ts","app/stores/activityStore.ts","app/stores/profileStore.ts","app/stores/userStore.ts","app/stores/store.ts","app/stores/commonStore.ts","app/stores/modalStore.ts","app/stores/commentStore.ts","features/activities/dashboard/ActivityFilters.tsx","features/profiles/FollowButton.tsx","features/profiles/ProfileCard.tsx","features/activities/dashboard/ActivityListItemAttendee.tsx","features/activities/dashboard/ActivityListItem.tsx","features/activities/dashboard/ActivityList.tsx","features/activities/dashboard/ActivityListItemPlaceholder.tsx","features/activities/dashboard/ActivityDashboard.tsx","app/layout/LoadingComponent.tsx","features/activities/details/ActivityDetailedChat.tsx","features/activities/details/ActivityDetailedHeader.tsx","features/activities/details/ActivityDetailedInfo.tsx","features/activities/details/ActivityDetailedSidebar.tsx","features/activities/details/ActivityDetails.tsx","app/common/form/MyDateInput.tsx","app/common/form/MySelectionInput.tsx","app/common/form/MyTextArea.tsx","app/common/form/MyTextInput.tsx","app/common/options/categoryOptions.ts","features/activities/form/ActivityForm.tsx","features/errors/NotFound.tsx","features/errors/ValidationErrors.tsx","features/errors/TestError.tsx","features/users/LoginForm.tsx","features/users/RegisterForm.tsx","features/home/HomePage.tsx","features/profiles/ProfileEditForm.tsx","features/profiles/ProfileAbout.tsx","features/profiles/ProfileActivities.tsx","features/profiles/ProfileFollowings.tsx","app/common/imageUpload/PhotoWidgetCropper.tsx","app/common/imageUpload/PhotoWidgetDropzone.tsx","app/common/imageUpload/PhotoUploadWidget.tsx","features/profiles/ProfilePhotos.tsx","features/profiles/ProfileContent.tsx","features/profiles/ProfileHeader.tsx","features/profiles/ProfilePage.tsx","features/errors/ServerError.tsx","app/common/modals/ModalContainer.tsx","app/layout/NavBar.tsx","app/layout/PrivateRoute.tsx","app/layout/App.tsx","reportWebVitals.ts","app/layout/ScrollToTop.tsx","index.tsx"],"names":["PaginatedResult","data","pagination","this","PagingParams","pageNumber","pageSize","axios","defaults","baseURL","process","interceptors","request","use","config","token","store","commonStore","headers","Authorization","response","a","JSON","parse","error","status","toast","method","errors","hasOwnProperty","history","push","modalStateErrors","key","flat","setServerError","Promise","reject","responseBody","requests","url","get","then","body","post","put","delete","agent","Activities","list","params","details","id","create","activity","update","attend","Account","current","login","user","register","fbLogin","accessToken","Profiles","username","uploadPhoto","file","formData","FormData","append","setMainPhoto","deletePhoto","updateProfile","profile","updateFollowing","listFollowings","predicate","listActivities","Activity","init","Object","assign","ActivityFormValues","undefined","title","category","description","date","city","venue","Profile","displayName","image","ActivityStore","activityRegistry","Map","selectedActivity","editMode","loading","loadingInitial","pagingParams","set","setPagingParams","setPredicate","value","resetPredicate","forEach","loadActivities","axiosParams","result","setActivity","setPagination","setLoadingInitial","console","log","loadActivity","getActivity","runInAction","userStore","isGoing","attendees","some","isHost","hostUsername","host","find","x","Date","state","createActivity","attendee","newActivity","updateActivity","updatedActivity","deleteActivity","updateAttendance","filter","cancelActivityToggle","isCancelled","clearSelectedActivity","updateAttendeeFollowing","following","followersCount","makeAutoObservable","reaction","keys","clear","URLSearchParams","toString","toISOString","Array","from","values","sort","b","getTime","entries","activitiesByDates","reduce","activities","format","ProfileStore","loadingProfile","uploading","followings","loadingFollowings","activeTab","userActivities","loadingActivities","setActiveTab","loadProfile","photo","photos","isMain","setImage","p","setDisplayName","updatFollowing","activityStore","followingCount","loadFollowings","loadUserActivities","UserStore","fbAccessToken","fbLoading","creds","setToken","modalStore","closeModal","logout","window","localStorage","removeItem","getUser","name","getFacebookLoginStatus","FB","getLoginStatus","authResponse","facebookLogin","apiLogin","catch","scope","getItem","appLoaded","setAppLoaded","setItem","modal","open","openModal","content","profileStore","commentStore","comments","hubConnection","createHubConnection","activityId","HubConnectionBuilder","withUrl","accessTokenFactory","withAutomaticReconnect","configureLogging","LogLevel","Information","build","start","on","comment","createdAt","unshift","stopHubConnection","stop","clearComments","addComment","invoke","StoreContext","createContext","useStore","useContext","observer","Menu","vertical","size","style","width","marginTop","Header","icon","attached","color","Item","active","has","onClick","onChange","Reveal","animated","Content","visible","Button","fluid","hidden","basic","e","preventDefault","handleFollow","Card","as","Link","to","Image","src","Description","str","length","substring","truncate","bio","extra","Icon","styles","borderColor","borderWidth","List","horizontal","map","Popup","hoverable","trigger","circular","bordered","ActivityListItem","Segment","Group","Label","textAlign","marginBottom","secondary","clearing","floated","groupedActivities","group","sub","ActivityListItemPlaceholder","Placeholder","minHeight","Line","Paragraph","disabled","useState","loadingNext","setLoadingNext","useEffect","Grid","Column","pageStart","loadMore","currentPage","hasMore","totalPages","initialLoad","Loader","LoadingComponent","inverted","Dimmer","border","onSubmit","resetForm","initialValues","validationSchema","Yup","required","isSubmitting","isValid","handleSubmit","className","props","position","placeholder","rows","field","onKeyPress","shiftKey","Comment","Avatar","Author","Metadata","formatDistanceToNow","Text","whiteSpace","activityImageStyle","activityImageTextStyle","bottom","left","height","padding","zIndex","top","ribbon","verticalAlign","relaxed","divided","Extra","useParams","MyDateInput","useField","meta","helpers","Form","Field","touched","selected","setValue","MySelectInput","label","Select","clearable","options","d","onBlur","setTouched","MyTextArea","MyTextInput","categoryOptions","text","useHistory","nullable","enableReinitialize","uuid","handleFormSubmit","dirty","autoComplete","placeholderText","showTimeSelect","timeCaption","dateFormat","positive","type","NotFound","Inline","primary","ValidationErrors","Message","err","i","TestErrors","setErrors","widths","baseUrl","email","password","render","Container","alt","isLoggedIn","Divider","setEditMode","isCurrentUser","Tab","Pane","panes","menuItem","pane","menu","pointing","onTabChange","activeIndex","handleTabChange","itemsPerRow","objectFit","Meta","PhotoWidgetCropper","imagePreview","setCropper","initialAspectRatio","aspectRatio","preview","guides","viewMode","autoCropArea","background","onInitialized","cropper","PhotoWidgetDropzone","setFiles","dzStyles","borderRadius","paddingTop","onDrop","useCallback","acceptedFiles","URL","createObjectURL","useDropzone","getRootProps","getInputProps","isDragActive","PhotoUploadWidget","files","revokeObjectURL","overflow","getCroppedCanvas","toBlob","blob","addPhotoMode","setAddPhotoMode","target","setTarget","currentTarget","handleSetMainPhoto","handleDeletePhoto","menuPosition","avatar","Statistic","message","Modal","onClose","fixed","NavLink","exact","header","marginRight","spaced","Dropdown","PrivateRoute","Component","component","rest","location","useLocation","finally","hideProgressBar","path","HomePage","ActivityDashboard","ActivityDetails","ActivityForm","ProfilePage","TestError","ServerError","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ScrollToTop","pathname","scrollTo","createBrowserHistory","ReactDOM","Provider","document","getElementById"],"mappings":"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","file":"static/js/main.0d307a42.chunk.js","sourcesContent":["export interface Pagination {\r\n    currentPage: number;\r\n    itemsPerPage: number;\r\n    totalItems: number;\r\n    totalPages: number;\r\n}\r\n\r\nexport class PaginatedResult<T> {\r\n    data: T;\r\n    pagination: Pagination;\r\n\r\n    constructor(data: T, pagination: Pagination) {\r\n        this.data = data;\r\n        this.pagination = pagination;\r\n    }\r\n}\r\n\r\nexport class PagingParams {\r\n    pageNumber;\r\n    pageSize;\r\n\r\n    constructor(pageNumber = 1, pageSize = 2) {\r\n        this.pageNumber = pageNumber;\r\n        this.pageSize = pageSize;\r\n    }\r\n}","import axios, { AxiosError, AxiosResponse } from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\nimport { history } from \"../..\";\r\nimport { Activity, ActivityFormValues } from \"../models/activity\";\r\nimport { PaginatedResult } from \"../models/paginations\";\r\nimport { Photo, Profile, UserActivity } from \"../models/profile\";\r\nimport { User, UserFormValues } from \"../models/user\";\r\nimport { store } from \"../stores/store\";\r\n\r\nconst sleep = (delay: number) => {\r\n    return new Promise((resolve) => {\r\n        setTimeout(resolve, delay)\r\n    })\r\n}\r\n\r\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\r\n\r\naxios.interceptors.request.use(config => {\r\n    const token = store.commonStore.token;\r\n    if (token) config.headers.Authorization = `Bearer ${token}`\r\n    return config;\r\n})\r\n\r\naxios.interceptors.response.use(async response => {\r\n    if (process.env.NODE_ENV === 'development') await sleep(1000);\r\n    const pagination = response.headers['pagination'];\r\n    if (pagination) {\r\n        response.data = new PaginatedResult(response.data, JSON.parse(pagination));\r\n        return response as AxiosResponse<PaginatedResult<any>>\r\n    }\r\n    return response;\r\n}, (error: AxiosError) => {\r\n    const { data, status, config } = error.response!;\r\n    switch (status) {\r\n        case 400:\r\n            if (typeof data === 'string') {\r\n                toast.error(data);\r\n            }\r\n            if (config.method === 'get' && data.errors.hasOwnProperty('id')) {\r\n                history.push('/not-found')\r\n            }\r\n            if (data.errors) {\r\n                const modalStateErrors = [];\r\n                for (const key in data.errors) {\r\n                    if (data.errors[key]) {\r\n                        modalStateErrors.push(data.errors[key])\r\n                    }\r\n                }\r\n                throw modalStateErrors.flat();\r\n            }\r\n            break;\r\n        case 401:\r\n            toast.error('unauthorized');\r\n            break;\r\n        case 404:\r\n            history.push('/not-found');\r\n            break;\r\n        case 500:\r\n            store.commonStore.setServerError(data);\r\n            history.push('/server-error')\r\n            break;\r\n    }\r\n    return Promise.reject(error);\r\n})\r\n\r\nconst responseBody = <T>(response: AxiosResponse<T>) => response.data;\r\n\r\nconst requests = {\r\n    get: <T>(url: string) => axios.get<T>(url).then(responseBody),\r\n    post: <T>(url: string, body: {}) => axios.post<T>(url, body).then(responseBody),\r\n    put: <T>(url: string, body: {}) => axios.put<T>(url, body).then(responseBody),\r\n    del: <T>(url: string) => axios.delete<T>(url).then(responseBody),\r\n}\r\n\r\nconst Activities = {\r\n    list: (params: URLSearchParams) => axios.get<PaginatedResult<Activity[]>>('/activities', {params}).then(responseBody),\r\n    details: (id: string) => requests.get<Activity>(`/activities/${id}`),\r\n    create: (activity: ActivityFormValues) => requests.post<void>('/activities', activity),\r\n    update: (activity: ActivityFormValues) => requests.put<void>(`/activities/${activity.id}`, activity),\r\n    delete: (id: string) => requests.del<void>(`/activities/${id}`),\r\n    attend: (id: string) => requests.post<void>(`/activities/${id}/attend`, {})\r\n}\r\n\r\nconst Account = {\r\n    current: () => requests.get<User>('/account'),\r\n    login: (user: UserFormValues) => requests.post<User>('/account/login', user),\r\n    register: (user: UserFormValues) => requests.post<User>('/account/register', user),\r\n    fbLogin: (accessToken: string) => requests.post<User>(`/account/fbLogin?accessToken=${accessToken}`, {})\r\n}\r\n\r\nconst Profiles = {\r\n    get: (username: string) => requests.get<Profile>(`/profiles/${username}`),\r\n    uploadPhoto: (file: Blob) => {\r\n        let formData = new FormData();\r\n        formData.append('File', file);\r\n        return axios.post<Photo>('photos', formData, {\r\n            headers: {'Content-type': 'multipart/form-data'}\r\n        })\r\n    },\r\n    setMainPhoto: (id: string) => requests.post(`/photos/${id}/setMain`, {}),\r\n    deletePhoto: (id: string) => requests.del(`/photos/${id}`),\r\n    updateProfile: (profile: Partial<Profile>) => requests.put(`/profiles`, profile),\r\n    updateFollowing: (username:string) => requests.post(`/follow/${username}`, {}),\r\n    listFollowings: (username: string, predicate: string) => requests.get<Profile[]>(`/follow/${username}?predicate=${predicate}`),\r\n    listActivities: (username: string, predicate: string) => requests.get<UserActivity[]>(`/profiles/${username}/activities?predicate=${predicate}`)\r\n}\r\n\r\nconst agent = {\r\n    Activities,\r\n    Account,\r\n    Profiles\r\n}\r\n\r\nexport default agent;","import { Profile } from \"./profile\";\r\n\r\nexport interface Activity {\r\n    id: string;\r\n    title: string;\r\n    date: Date | null;\r\n    description: string;\r\n    category: string;\r\n    city: string;\r\n    venue: string;\r\n    hostUsername: string;\r\n    isCancelled: boolean;\r\n    isGoing: boolean;\r\n    isHost: boolean;\r\n    host?: Profile;\r\n    attendees: Profile[];\r\n}\r\n\r\nexport class Activity implements Activity {\r\n    constructor(init?: ActivityFormValues){\r\n        Object.assign(this, init)\r\n    }\r\n}\r\n\r\nexport class ActivityFormValues {\r\n    id?: string = undefined;\r\n    title: string = '';\r\n    category: string = '';\r\n    description: string = '';\r\n    date: Date | null = null;\r\n    city: string = '';\r\n    venue: string = '';\r\n\r\n    constructor(activity?: ActivityFormValues) {\r\n        if (activity) {\r\n            this.id = activity.id;\r\n            this.title = activity.title;\r\n            this.category = activity.category;\r\n            this.description = activity.description;\r\n            this.date = activity.date;\r\n            this.city = activity.city;\r\n            this.venue = activity.venue;\r\n        }\r\n    }\r\n}","import { User } from \"./user\";\r\n\r\nexport interface Profile {\r\n    username: string;\r\n    displayName: string;\r\n    image?: string\r\n    bio?: string;\r\n    followersCount: number;\r\n    followingCount: number;\r\n    following: boolean;\r\n    photos?: Photo[];\r\n}\r\n\r\nexport class Profile implements Profile {\r\n    constructor(user: User) {\r\n        this.username = user.username;\r\n        this.displayName = user.displayName;\r\n        this.image = user.image;\r\n        \r\n    }\r\n}\r\n\r\nexport interface Photo {\r\n    id: string;\r\n    url: string;\r\n    isMain: boolean;\r\n}\r\n\r\nexport interface UserActivity {\r\n    id: string;\r\n    title: string;\r\n    category: string;\r\n    date: Date;\r\n}","import { format } from \"date-fns\";\r\nimport { makeAutoObservable, reaction, runInAction } from \"mobx\";\r\nimport agent from \"../api/agent\";\r\nimport { Activity, ActivityFormValues } from \"../models/activity\";\r\nimport { Pagination, PagingParams } from \"../models/paginations\";\r\nimport { Profile } from \"../models/profile\";\r\nimport { store } from \"./store\";\r\n\r\nexport default class ActivityStore {\r\n    activityRegistry = new Map<string, Activity>();\r\n    selectedActivity: Activity | undefined = undefined;\r\n    editMode = false;\r\n    loading = false;\r\n    loadingInitial = false;\r\n    pagination: Pagination | null = null;\r\n    pagingParams = new PagingParams();\r\n    predicate = new Map().set('all', true)\r\n\r\n    constructor() {\r\n        makeAutoObservable(this)\r\n\r\n        reaction(\r\n            () => this.predicate.keys(),\r\n            () => {\r\n                this.pagingParams = new PagingParams();\r\n                this.activityRegistry.clear();\r\n                this.loadActivities();\r\n            }\r\n        )\r\n    }\r\n\r\n    setPagingParams = (pagingParams: PagingParams) => {\r\n        this.pagingParams = pagingParams;\r\n    }\r\n\r\n    setPredicate = (predicate: string, value: string | Date) => {\r\n        const resetPredicate = () => {\r\n            this.predicate.forEach((value, key) => {\r\n                if (key !== 'startDate') this.predicate.delete(key)\r\n            })\r\n        }\r\n        switch (predicate) {\r\n            case 'all':\r\n                resetPredicate();\r\n                this.predicate.set('all', true);\r\n                break;\r\n            case 'isGoing':\r\n                resetPredicate();\r\n                this.predicate.set('isGoing', true);\r\n                break;\r\n            case 'isHost':\r\n                resetPredicate();\r\n                this.predicate.set('isHost', true);\r\n                break;\r\n            case 'startDate':\r\n                this.predicate.delete('startDate');\r\n                this.predicate.set('startDate', value);\r\n        }\r\n    }\r\n\r\n    get axiosParams() {\r\n        const params = new URLSearchParams();\r\n        params.append('pageNumber', this.pagingParams.pageNumber.toString());\r\n        params.append('pageSize', this.pagingParams.pageSize.toString());\r\n        this.predicate.forEach((value, key) => {\r\n            if (key === 'startDate') {\r\n                params.append(key, (value as Date).toISOString());\r\n            } else {\r\n                params.append(key, value);\r\n            }\r\n        })\r\n        return params;\r\n    }\r\n\r\n    get activitiesByDates() {\r\n        return Array.from(this.activityRegistry.values()).sort((a, b) => a.date!.getTime() - b.date!.getTime());\r\n    }\r\n\r\n    get groupedActivities() {\r\n        return Object.entries(\r\n            this.activitiesByDates.reduce((activities, activity) => {\r\n                const date = format(activity.date!, 'dd MMM yyyy')\r\n                activities[date] = activities[date] ? [...activities[date], activity] : [activity];\r\n                return activities;\r\n            }, {} as { [key: string]: Activity[] })\r\n        )\r\n    }\r\n\r\n    loadActivities = async () => {\r\n        this.loadingInitial = true;\r\n        try {\r\n            const result = await agent.Activities.list(this.axiosParams);\r\n            result.data.forEach(activity => {\r\n                this.setActivity(activity);\r\n            });\r\n            this.setPagination(result.pagination)\r\n            this.setLoadingInitial(false)\r\n        } catch (error) {\r\n            console.log(error);\r\n            this.setLoadingInitial(false)\r\n        }\r\n    }\r\n\r\n    setPagination = (pagination: Pagination) => {\r\n        this.pagination = pagination;\r\n    }\r\n\r\n    loadActivity = async (id: string) => {\r\n        let activity = this.getActivity(id);\r\n        if (activity) {\r\n            this.selectedActivity = activity;\r\n            return activity;\r\n        } else {\r\n            this.loadingInitial = true\r\n            try {\r\n                activity = await agent.Activities.details(id);\r\n                this.setActivity(activity);\r\n                runInAction(() => {\r\n                    this.selectedActivity = activity;\r\n                })\r\n                this.setLoadingInitial(false);\r\n                return activity;\r\n            } catch (error) {\r\n                console.log(error)\r\n                this.setLoadingInitial(false)\r\n            }\r\n        }\r\n    }\r\n\r\n    private setActivity = (activity: Activity) => {\r\n        const user = store.userStore.user;\r\n        if (user) {\r\n            activity.isGoing = activity.attendees!.some(\r\n                a => a.username === user.username\r\n            )\r\n            activity.isHost = activity.hostUsername === user.username;\r\n            activity.host = activity.attendees?.find(x => x.username === activity.hostUsername);\r\n        }\r\n        activity.date = new Date(activity.date!);\r\n        this.activityRegistry.set(activity.id, activity);\r\n    }\r\n\r\n    private getActivity = (id: string) => {\r\n        return this.activityRegistry.get(id);\r\n    }\r\n\r\n    setLoadingInitial = (state: boolean) => {\r\n        this.loadingInitial = state;\r\n    }\r\n\r\n    createActivity = async (activity: ActivityFormValues) => {\r\n        const user = store.userStore.user;\r\n        const attendee = new Profile(user!);\r\n        try {\r\n            await agent.Activities.create(activity)\r\n            const newActivity = new Activity(activity);\r\n            newActivity.hostUsername = user!.username\r\n            newActivity.attendees = [attendee];\r\n            this.setActivity(newActivity);\r\n            runInAction(() => {\r\n                this.selectedActivity = newActivity;\r\n            })\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n\r\n    }\r\n\r\n    updateActivity = async (activity: ActivityFormValues) => {\r\n        try {\r\n            await agent.Activities.update(activity);\r\n            runInAction(() => {\r\n                if (activity.id) {\r\n                    let updatedActivity = { ...this.getActivity(activity.id), ...activity }\r\n                    this.activityRegistry.set(activity.id, updatedActivity as Activity)\r\n                    this.selectedActivity = activity as Activity;\r\n                }\r\n            })\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    deleteActivity = async (id: string) => {\r\n        this.loading = true;\r\n        try {\r\n            await agent.Activities.delete(id);\r\n            runInAction(() => {\r\n                this.activityRegistry.delete(id);\r\n                this.loading = false;\r\n            })\r\n        } catch (error) {\r\n            console.log(error)\r\n            runInAction(() => {\r\n                this.loading = false;\r\n            })\r\n        }\r\n    }\r\n\r\n    updateAttendance = async () => {\r\n        const user = store.userStore.user;\r\n        this.loading = true;\r\n        try {\r\n            await agent.Activities.attend(this.selectedActivity!.id);\r\n            runInAction(() => {\r\n                if (this.selectedActivity?.isGoing) {\r\n                    this.selectedActivity.attendees = this.selectedActivity.attendees?.filter(a => a.username !== user?.username)\r\n                    this.selectedActivity.isGoing = false\r\n                } else {\r\n                    const attendee = new Profile(user!);\r\n                    this.selectedActivity?.attendees?.push(attendee);\r\n                    this.selectedActivity!.isGoing = true;\r\n                }\r\n                this.activityRegistry.set(this.selectedActivity!.id, this.selectedActivity!)\r\n            })\r\n        } catch (error) {\r\n            console.log(error);\r\n        } finally {\r\n            runInAction(() => this.loading = false);\r\n        }\r\n    }\r\n\r\n    cancelActivityToggle = async () => {\r\n        this.loading = true;\r\n        try {\r\n            await agent.Activities.attend(this.selectedActivity!.id)\r\n            runInAction(() => {\r\n                this.selectedActivity!.isCancelled = !this.selectedActivity!.isCancelled;\r\n                this.activityRegistry.set(this.selectedActivity!.id, this.selectedActivity!)\r\n            })\r\n        } catch (error) {\r\n            console.log(error);\r\n        } finally {\r\n            runInAction(() => this.loading = false);\r\n        }\r\n    }\r\n\r\n    clearSelectedActivity = () => {\r\n        this.selectedActivity = undefined;\r\n    }\r\n\r\n    updateAttendeeFollowing = (username: string) => {\r\n        this.activityRegistry.forEach(activity => {\r\n            activity.attendees.forEach(attendee => {\r\n                if (attendee.username === username) {\r\n                    attendee.following ? attendee.followersCount-- : attendee.followersCount++;\r\n                    attendee.following = !attendee.following\r\n                }\r\n            })\r\n        })\r\n    }\r\n}","import { makeAutoObservable, reaction, runInAction } from \"mobx\";\r\nimport agent from \"../api/agent\";\r\nimport { Photo, Profile, UserActivity } from \"../models/profile\";\r\nimport { store } from \"./store\";\r\n\r\nexport default class ProfileStore {\r\n    profile: Profile | null = null;\r\n    loadingProfile = false;\r\n    uploading = false;\r\n    loading = false;\r\n    followings: Profile[] = [];\r\n    loadingFollowings = false;\r\n    activeTab = 0;\r\n    userActivities: UserActivity[] = [];\r\n    loadingActivities = false;\r\n\r\n    constructor() {\r\n        makeAutoObservable(this);\r\n        reaction(\r\n            () => this.activeTab,\r\n            activeTab => {\r\n                if (activeTab === 3 || activeTab === 4) {\r\n                    const predicate = activeTab === 3 ? 'followers' : 'following';\r\n                    this.loadFollowings(predicate);\r\n                } else {\r\n                    this.followings = [];\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    setActiveTab = (activeTab: any) => {\r\n        this.activeTab = activeTab;\r\n    }\r\n\r\n    get isCurrentUser() {\r\n        if (store.userStore.user && this.profile) {\r\n            return store.userStore.user.username === this.profile.username;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    loadProfile = async (username: string) => {\r\n        this.loadingProfile = true;\r\n        try {\r\n            const profile = await agent.Profiles.get(username);\r\n            runInAction(() => {\r\n                this.profile = profile;\r\n                this.loadingProfile = false;\r\n            })\r\n        } catch (error) {\r\n            console.log(error);\r\n            runInAction(() => this.loadingProfile = false);\r\n        }\r\n    }\r\n\r\n    uploadPhoto = async (file: Blob) => {\r\n        this.uploading = true;\r\n        try {\r\n            const response = await agent.Profiles.uploadPhoto(file);\r\n            const photo = response.data;\r\n            runInAction(() => {\r\n                if (this.profile) {\r\n                    this.profile.photos?.push(photo);\r\n                    if (photo.isMain && store.userStore.user) {\r\n                        store.userStore.setImage(photo.url);\r\n                        this.profile.image = photo.url;\r\n                    }\r\n                }\r\n                this.uploading = false;\r\n            })\r\n        } catch (error) {\r\n            console.log(error);\r\n            runInAction(() => this.uploading = false)\r\n        }\r\n    }\r\n\r\n    setMainPhoto = async (photo: Photo) => {\r\n        this.loading = true;\r\n        try {\r\n            await agent.Profiles.setMainPhoto(photo.id);\r\n            store.userStore.setImage(photo.url);\r\n            runInAction(() => {\r\n                if (this.profile && this.profile.photos) {\r\n                    this.profile.photos.find(p => p.isMain)!.isMain = false;\r\n                    this.profile.photos.find(p => p.id === photo.id)!.isMain = true\r\n                    this.profile.image = photo.url;\r\n                    this.loading = false;\r\n                }\r\n            })\r\n        } catch (error) {\r\n            console.log(error);\r\n            runInAction(() => this.loading = false);\r\n        }\r\n    }\r\n\r\n    deletePhoto = async (photo: Photo) => {\r\n        this.loading = true;\r\n        try {\r\n            await agent.Profiles.deletePhoto(photo.id);\r\n            runInAction(() => {\r\n                if (this.profile) {\r\n                    this.profile.photos = this.profile.photos?.filter(p => p.id !== photo.id);\r\n                    this.loading = false;\r\n                }\r\n            })\r\n        } catch (error) {\r\n            runInAction(() => this.loading = false);\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    updateProfile = async (profile: Partial<Profile>) => {\r\n        this.loading = true;\r\n        try {\r\n            await agent.Profiles.updateProfile(profile);\r\n            runInAction(() => {\r\n                if (profile.displayName && profile.displayName !== store.userStore.user?.displayName) {\r\n                    store.userStore.setDisplayName(profile.displayName);\r\n                }\r\n                this.profile = { ...this.profile, ...profile as Profile };\r\n                this.loading = false;\r\n            })\r\n        } catch (error) {\r\n            console.log(error);\r\n            runInAction(() => this.loading = false)\r\n        }\r\n    }\r\n\r\n    updatFollowing = async (username: string, following: boolean) => {\r\n        this.loading = true;\r\n        try {\r\n            await agent.Profiles.updateFollowing(username);\r\n            store.activityStore.updateAttendeeFollowing(username);\r\n            runInAction(() => {\r\n                if (this.profile && this.profile.username !== store.userStore.user?.username && this.profile.username === username) {\r\n                    following ? this.profile.followersCount++ : this.profile.followersCount--;\r\n                    this.profile.following = !this.profile.following\r\n                }\r\n                if (this.profile && this.profile.username === store.userStore.user?.username) {\r\n                    following ? this.profile.followingCount++ : this.profile.followingCount--;\r\n                }\r\n                this.followings.forEach(profile => {\r\n                    if (profile.username === username) {\r\n                        profile.following ? profile.followersCount-- : profile.followersCount++\r\n                        profile.following = !profile.following\r\n                    }\r\n                })\r\n                this.loading = false;\r\n            })\r\n        } catch (error) {\r\n            console.log(error);\r\n            runInAction(() => this.loading = false)\r\n        }\r\n    }\r\n\r\n    loadFollowings = async (predicate: string) => {\r\n        this.loadingFollowings = true;\r\n        try {\r\n            const followings = await agent.Profiles.listFollowings(this.profile!.username, predicate);\r\n            runInAction(() => {\r\n                this.followings = followings;\r\n                this.loadingFollowings = false;\r\n            })\r\n        } catch (error) {\r\n            console.log(error);\r\n            runInAction(() => this.loadingFollowings = false);\r\n        }\r\n    }\r\n\r\n    loadUserActivities = async (username: string, predicate?: string) => {\r\n        this.loadingActivities = true;\r\n        try {\r\n            const activities = await agent.Profiles.listActivities(username, predicate!);\r\n            runInAction(() => {\r\n                this.userActivities = activities;\r\n                this.loadingActivities = false\r\n            })\r\n        } catch (error) {\r\n            console.log(error);\r\n            runInAction(() => {\r\n                this.loadingActivities = false\r\n            })\r\n        }\r\n    }\r\n}","import { access } from \"fs\";\r\nimport { makeAutoObservable, runInAction } from \"mobx\";\r\nimport { history } from \"../..\";\r\nimport agent from \"../api/agent\";\r\nimport { User, UserFormValues } from \"../models/user\";\r\nimport { store } from \"./store\";\r\n\r\nexport default class UserStore {\r\n    user: User | null = null;\r\n    fbAccessToken: string | null = null;\r\n    fbLoading = false\r\n\r\n    constructor() {\r\n        makeAutoObservable(this)\r\n    }\r\n\r\n    get isLoggedIn() {\r\n        return !!this.user;\r\n    }\r\n\r\n    login = async (creds: UserFormValues) => {\r\n        try {\r\n            const user = await agent.Account.login(creds);\r\n            store.commonStore.setToken(user.token);\r\n            runInAction(() => this.user = user);\r\n            history.push('/activities');\r\n            store.modalStore.closeModal();\r\n        } catch (error) {\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    logout = () => {\r\n        store.commonStore.setToken(null);\r\n        window.localStorage.removeItem('jwt');\r\n        this.user = null;\r\n        history.push('/');\r\n    }\r\n\r\n    getUser = async () => {\r\n        try {\r\n            const user = await agent.Account.current();\r\n            runInAction(() => this.user = user);\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    register = async (creds: UserFormValues) => {\r\n        try {\r\n            const user = await agent.Account.register(creds);\r\n            store.commonStore.setToken(user.token);\r\n            runInAction(() => this.user = user);\r\n            history.push('/activities');\r\n            store.modalStore.closeModal();\r\n        } catch (error) {\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    setImage = (image: string) => {\r\n        if (this.user) this.user.image = image;\r\n    }\r\n\r\n    setDisplayName = (name: string) => {\r\n        if (this.user) this.user.displayName = name;\r\n    }\r\n\r\n    getFacebookLoginStatus = async () => {\r\n        window.FB.getLoginStatus(response => {\r\n            if (response.status === 'connected') {\r\n                this.fbAccessToken = response.authResponse.accessToken;\r\n            }\r\n        })\r\n    }\r\n\r\n    facebookLogin = () => {\r\n        this.fbLoading = true;\r\n        const apiLogin = (accessToken: string) => {\r\n            agent.Account.fbLogin(accessToken).then(user => {\r\n                store.commonStore.setToken(user.token);\r\n                runInAction(() => {\r\n                    this.user = user;\r\n                    this.fbLoading = false\r\n                })\r\n                history.push('/activities')\r\n            }).catch(error => {\r\n                console.log(error);\r\n                runInAction(() => this.fbLoading = false)\r\n            })\r\n        }\r\n        if (this.fbAccessToken) {\r\n            apiLogin(this.fbAccessToken)\r\n        } else {\r\n            window.FB.login(response => {\r\n                apiLogin(response.authResponse.accessToken);\r\n            }, { scope: 'public_profile,email' })\r\n        }\r\n    }\r\n}","import { createContext, useContext } from \"react\";\r\nimport ActivityStore from \"./activityStore\"\r\nimport CommentStore from \"./commentStore\";\r\nimport CommonStore from \"./commonStore\";\r\nimport ModalStore from \"./modalStore\";\r\nimport ProfileStore from \"./profileStore\";\r\nimport UserStore from \"./userStore\";\r\n\r\ninterface Store {\r\n    activityStore: ActivityStore;\r\n    commonStore: CommonStore;\r\n    userStore: UserStore;\r\n    modalStore: ModalStore;\r\n    profileStore: ProfileStore;\r\n    commentStore: CommentStore;\r\n}\r\n\r\nexport const store : Store = {\r\n    activityStore: new ActivityStore(),\r\n    commonStore: new CommonStore(),\r\n    userStore: new UserStore(),\r\n    modalStore: new ModalStore(),\r\n    profileStore: new ProfileStore(),\r\n    commentStore: new CommentStore()\r\n}\r\n\r\nexport const StoreContext = createContext(store);\r\n\r\nexport function useStore() {\r\n    return useContext(StoreContext);\r\n}","import { makeAutoObservable, reaction } from \"mobx\";\r\nimport { ServerError } from \"../models/serverError\";\r\n\r\nexport default class CommonStore {\r\n    error: ServerError | null = null;\r\n    token: string | null = window.localStorage.getItem('jwt');\r\n    appLoaded = false;\r\n\r\n    constructor() {\r\n        makeAutoObservable(this);\r\n\r\n        reaction(\r\n            () => this.token,\r\n            token => {\r\n                if(token) {\r\n                    window.localStorage.setItem('jwt', token)\r\n                } else {\r\n                    window.localStorage.removeItem('jwt')\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    setServerError= (error: ServerError) => {\r\n        this.error = error;\r\n    }\r\n\r\n    setToken = (token: string | null) => {\r\n        this.token = token;\r\n    }\r\n\r\n    setAppLoaded = () => {\r\n        this.appLoaded = true;\r\n    }\r\n}","import { makeAutoObservable } from \"mobx\"\r\n\r\ninterface Modal {\r\n    open: boolean;\r\n    body: JSX.Element | null;\r\n}\r\n\r\nexport default class ModalStore {\r\n    modal: Modal = {\r\n        open: false,\r\n        body: null,\r\n    }\r\n\r\n    constructor() {\r\n        makeAutoObservable(this)\r\n    }\r\n\r\n    openModal = (content: JSX.Element) => {\r\n        this.modal.open = true;\r\n        this.modal.body = content;\r\n    }\r\n\r\n    closeModal = () => {\r\n        this.modal.open = false;\r\n        this.modal.body = null;\r\n    }\r\n}","import { HubConnection, HubConnectionBuilder, LogLevel } from \"@microsoft/signalr\";\r\nimport { makeAutoObservable, runInAction } from \"mobx\";\r\nimport { ChatComment } from \"../models/comment\";\r\nimport { store } from \"./store\";\r\n\r\nexport default class CommentStore {\r\n    comments: ChatComment[] = [];\r\n    hubConnection: HubConnection | null = null;\r\n\r\n    constructor() {\r\n        makeAutoObservable(this);\r\n    }\r\n\r\n    createHubConnection = (activityId: string) => {\r\n        if (store.activityStore.selectedActivity) {\r\n            this.hubConnection = new HubConnectionBuilder()\r\n                .withUrl(process.env.REACT_APP_CHAT_URL + '?activityId=' + activityId, {\r\n                    accessTokenFactory: () => store.userStore.user?.token!\r\n                })\r\n                .withAutomaticReconnect()\r\n                .configureLogging(LogLevel.Information)\r\n                .build();\r\n\r\n            this.hubConnection.start().catch(error => console.log('Error establishing connection: ', error))\r\n\r\n            this.hubConnection.on('LoadComments', (comments: ChatComment[]) => {\r\n                runInAction(() => {\r\n                    comments.forEach(comment => {\r\n                        comment.createdAt = new Date(comment.createdAt + 'Z');\r\n                    })\r\n                    this.comments = comments\r\n                });\r\n            })\r\n\r\n            this.hubConnection.on('ReceiveComment', (comment: ChatComment) => {\r\n                runInAction(() => {\r\n                    comment.createdAt = new Date(comment.createdAt)\r\n                    this.comments.unshift(comment)\r\n                });\r\n            })\r\n        }\r\n    }\r\n\r\n    stopHubConnection = () => {\r\n        this.hubConnection?.stop().catch(error => console.log('Error stopping connection: ', error))\r\n    }\r\n\r\n    clearComments = () => {\r\n        this.comments = [];\r\n        this.stopHubConnection();\r\n    }\r\n\r\n    addComment= async (values: any) => {\r\n        values.activityId = store.activityStore.selectedActivity?.id\r\n        try {\r\n            await this.hubConnection?.invoke('SendComment', values);\r\n        } catch (error) {\r\n            console.log(error);\r\n            \r\n        }\r\n    }\r\n}","import { observer } from 'mobx-react-lite'\r\nimport React from 'react'\r\nimport Calendar from 'react-calendar'\r\nimport { Header, Menu } from 'semantic-ui-react'\r\nimport { useStore } from '../../../app/stores/store'\r\n\r\nexport default observer(function ActivityFilters() {\r\n    const { activityStore: { predicate, setPredicate } } = useStore();\r\n    return (\r\n        <>\r\n            <Menu vertical size='large' style={{ width: '100%', marginTop: 25 }} >\r\n                <Header icon='filter' attached color='teal' content='Filters' />\r\n                <Menu.Item\r\n                    content='All Activities'\r\n                    active={predicate.has('all')}\r\n                    onClick={() => setPredicate('all', 'true')}\r\n                />\r\n                <Menu.Item\r\n                    content=\"I'm going\"\r\n                    active={predicate.has('isGoing')}\r\n                    onClick={() => setPredicate('isGoing', 'true')}\r\n                />\r\n                <Menu.Item\r\n                    content=\"I'm hosting\"\r\n                    active={predicate.has('isHost')}\r\n                    onClick={() => setPredicate('isHost', 'true')}\r\n                />\r\n            </Menu>\r\n            <Header />\r\n            <Calendar\r\n                onChange={(date: Date) => setPredicate('startDate', date)}\r\n                value={predicate.get('startDate') || new Date()}\r\n            />\r\n        </>\r\n    )\r\n})\r\n","import { observer } from 'mobx-react-lite'\r\nimport React, { SyntheticEvent } from 'react'\r\nimport { Reveal, Button } from 'semantic-ui-react'\r\nimport { Profile } from '../../app/models/profile'\r\nimport { useStore } from '../../app/stores/store'\r\n\r\ninterface Props {\r\n    profile: Profile;\r\n}\r\n\r\nexport default observer(function FollowButton({ profile }: Props) {\r\n    const {profileStore, userStore} = useStore();\r\n    const {updatFollowing, loading} = profileStore;\r\n\r\n    if (userStore.user?.username === profile.username) return null;\r\n\r\n    function handleFollow(e: SyntheticEvent, username: string) {\r\n        e.preventDefault();\r\n        profile.following ? updatFollowing(username, false) : updatFollowing(username, true);\r\n    }\r\n\r\n    return (\r\n        <Reveal animated='move'>\r\n            <Reveal.Content visible style={{ width: '100%' }}>\r\n                <Button\r\n                    fluid\r\n                    color='teal'\r\n                    content={profile.following ? 'Following' : 'Not following'}\r\n                />\r\n            </Reveal.Content>\r\n            <Reveal.Content hidden style={{ width: '100%' }}>\r\n                <Button\r\n                    fluid\r\n                    basic\r\n                    color={profile.following ? 'red' : 'green'}\r\n                    content={profile.following ? 'Unfollow' : 'Follow'}\r\n                    loading={loading}\r\n                    onClick={(e) => handleFollow(e, profile.username)}\r\n                />\r\n            </Reveal.Content>\r\n        </Reveal>\r\n    )\r\n})\r\n","import { observer } from 'mobx-react-lite'\r\nimport React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Card, Icon, Image } from 'semantic-ui-react'\r\nimport { Profile } from '../../app/models/profile'\r\nimport FollowButton from './FollowButton'\r\n\r\ninterface Props {\r\n    profile: Profile\r\n}\r\n\r\nexport default observer(function ProfileCard({ profile }: Props) {\r\n    function truncate(str: string | undefined) {\r\n        if (str) {\r\n            return str.length> 40 ? str.substring(0, 37) + '...' : str;\r\n        }\r\n    }\r\n    return (\r\n        <Card as={Link} to={`/profiles/${profile.username}`}>\r\n            <Image src={profile.image || '/assets/user.png'} />\r\n            <Card.Content>\r\n                <Card.Header>{profile.displayName}</Card.Header>\r\n                <Card.Description>{truncate(profile.bio)}</Card.Description>\r\n            </Card.Content>\r\n            <Card.Content extra>\r\n                <Icon name='user' />\r\n                {profile.followersCount} followers\r\n            </Card.Content>\r\n            <FollowButton profile={profile} />\r\n        </Card>\r\n    )\r\n})\r\n","import { observer } from 'mobx-react-lite'\r\nimport React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Image, List, Popup } from 'semantic-ui-react'\r\nimport { Profile } from '../../../app/models/profile'\r\nimport ProfileCard from '../../profiles/ProfileCard'\r\n\r\ninterface Props {\r\n    attendees: Profile[];\r\n}\r\n\r\nexport default observer(function ActivityListItemAttendee({ attendees }: Props) {\r\n    const styles = {\r\n        borderColor: 'orange',\r\n        borderWidth: 2\r\n    }\r\n\r\n    return (\r\n        <List horizontal>\r\n            {attendees.map(attendee => (\r\n                <Popup\r\n                    hoverable\r\n                    key={attendee.username}\r\n                    trigger={\r\n                        <List.Item key={attendee.username} as={Link} to={`/profiles/${attendee.username}`}>\r\n                            <Image \r\n                                size=\"mini\" \r\n                                circular\r\n                                src={attendee.image || '/assets/user.png'}\r\n                                bordered\r\n                                style={attendee.following ? styles : null}\r\n                            />\r\n                        </List.Item>\r\n                    }\r\n                >\r\n                    <Popup.Content>\r\n                        <ProfileCard profile={attendee} />\r\n                    </Popup.Content>\r\n                </Popup>\r\n            ))}\r\n        </List>\r\n    )\r\n})","import { format } from \"date-fns\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button, Icon, Item, Label, Segment } from \"semantic-ui-react\";\r\nimport { Activity } from \"../../../app/models/activity\";\r\nimport ActivityListItemAttendee from \"./ActivityListItemAttendee\";\r\n\r\ninterface Props {\r\n    activity: Activity\r\n}\r\n\r\nexport default function ActivityListItem({ activity }: Props) {\r\n\r\n    return (\r\n        <Segment.Group>\r\n            <Segment>\r\n                {activity.isCancelled && \r\n                    <Label attached='top' color='red' content='Cancelled' style={{textAlign: 'center'}} />\r\n                }\r\n                <Item.Group>\r\n                    <Item>\r\n                        <Item.Image style={{marginBottom: 3}} size='tiny' circular src={activity.host?.image || '/assets/user.png'} />\r\n                        <Item.Content>\r\n                            <Item.Header as={Link} to={`/activities/${activity.id}`}>\r\n                                {activity.title}\r\n                            </Item.Header>\r\n                            <Item.Description>Hosted by <Link to={`/profiles/${activity.hostUsername}`}>{activity.host?.displayName}</Link></Item.Description>\r\n                            {activity.isHost && (\r\n                                <Item.Description>\r\n                                    <Label basic color='orange'>\r\n                                        You are hosting this activity\r\n                                    </Label>\r\n                                </Item.Description>\r\n                            )}\r\n                            {activity.isGoing && !activity.isHost && (\r\n                                <Item.Description>\r\n                                    <Label basic color='green'>\r\n                                        You are going to this activity\r\n                                    </Label>\r\n                                </Item.Description>\r\n                            )}\r\n                        </Item.Content>\r\n                    </Item>\r\n                </Item.Group>\r\n            </Segment>\r\n            <Segment>\r\n                <span>\r\n                    <Icon name='clock' /> {format(activity.date!, 'dd MMM yyyy h:mm aa')}\r\n                    <Icon name='marker' /> {activity.venue}\r\n                </span>\r\n            </Segment>\r\n            <Segment secondary>\r\n                <ActivityListItemAttendee attendees={activity.attendees!} />\r\n            </Segment>\r\n            <Segment clearing>\r\n                <span>{activity.description}</span>\r\n                <Button as={Link} to={`/activities/${activity.id}`} color='teal' floated='right' content='View' />\r\n            </Segment>\r\n        </Segment.Group>\r\n    )\r\n}","import { observer } from \"mobx-react-lite\";\r\nimport React, { Fragment } from \"react\";\r\nimport { Header } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\nimport ActivityListItem from \"./ActivityListItem\";\r\n\r\nexport default observer(function ActivityList() {\r\n    const { activityStore } = useStore();\r\n    const { groupedActivities } = activityStore;\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            {groupedActivities.map(([group, activities]) => (\r\n                <Fragment key={group}>\r\n                    <Header sub color='teal'>\r\n                        {group}\r\n                    </Header>\r\n                    {activities.map(activity => (\r\n                        <ActivityListItem key={activity.id} activity={activity} />\r\n                    ))}\r\n                </Fragment>\r\n            ))}\r\n        </>\r\n\r\n    )\r\n})","import React, { Fragment } from 'react';\r\nimport { Segment, Button, Placeholder } from 'semantic-ui-react';\r\n\r\nexport default function ActivityListItemPlaceholder() {\r\n    return (\r\n        <Fragment>\r\n            <Placeholder fluid style={{ marginTop: 25 }}>\r\n                <Segment.Group>\r\n                    <Segment style={{ minHeight: 110 }}>\r\n                        <Placeholder>\r\n                            <Placeholder.Header image>\r\n                                <Placeholder.Line />\r\n                                <Placeholder.Line />\r\n                            </Placeholder.Header>\r\n                            <Placeholder.Paragraph>\r\n                                <Placeholder.Line />\r\n                            </Placeholder.Paragraph>\r\n                        </Placeholder>\r\n                    </Segment>\r\n                    <Segment>\r\n                        <Placeholder>\r\n                            <Placeholder.Line />\r\n                            <Placeholder.Line />\r\n                        </Placeholder>\r\n                    </Segment>\r\n                    <Segment secondary style={{ minHeight: 70 }} />\r\n                    <Segment clearing>\r\n                        <Button disabled color='blue' floated='right' content='View' />\r\n                    </Segment>\r\n                </Segment.Group>\r\n            </Placeholder>\r\n        </Fragment>\r\n    );\r\n};\r\n","import { observer } from \"mobx-react-lite\";\r\nimport { useEffect, useState } from \"react\";\r\nimport InfiniteScroll from \"react-infinite-scroller\";\r\nimport { Grid, Loader } from \"semantic-ui-react\";\r\nimport { PagingParams } from \"../../../app/models/paginations\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\nimport ActivityFilters from \"./ActivityFilters\";\r\nimport ActivityList from \"./ActivityList\";\r\nimport ActivityListItemPlaceholder from \"./ActivityListItemPlaceholder\";\r\n\r\nexport default observer(function ActivityDashboard() {\r\n    const { activityStore } = useStore();\r\n    const { loadActivities, activityRegistry, setPagingParams, pagination } = activityStore;\r\n    const [loadingNext, setLoadingNext] = useState(false);\r\n\r\n    function handleGoNext() {\r\n        setLoadingNext(true);\r\n        setPagingParams(new PagingParams(pagination!.currentPage + 1));\r\n        loadActivities().then(() => setLoadingNext(false));\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (activityRegistry.size <= 1) loadActivities();\r\n    }, [activityRegistry.size, loadActivities])\r\n\r\n    return (\r\n        <Grid>\r\n            <Grid.Column width='10'>\r\n                {activityStore.loadingInitial && !loadingNext ? (\r\n                    <>\r\n                        <ActivityListItemPlaceholder />\r\n                        <ActivityListItemPlaceholder />\r\n                    </>\r\n                ) : (\r\n                    <InfiniteScroll\r\n                        pageStart={0}\r\n                        loadMore={handleGoNext}\r\n                        hasMore={!loadingNext && !!pagination && pagination.currentPage < pagination.totalPages}\r\n                        initialLoad={false}\r\n                    >\r\n                        <ActivityList />\r\n                    </InfiniteScroll>\r\n                )}\r\n\r\n            </Grid.Column>\r\n            <Grid.Column width='6'>\r\n                <ActivityFilters />\r\n            </Grid.Column>\r\n            <Grid.Column width='10'>\r\n                <Loader active={loadingNext} />\r\n            </Grid.Column>\r\n        </Grid>\r\n    )\r\n})","import React from \"react\";\r\nimport { Dimmer, Loader } from \"semantic-ui-react\";\r\n\r\ninterface Props {\r\n    inverted?: boolean;\r\n    content?: string;\r\n}\r\n\r\nexport default function LoadingComponent({inverted = true, content = 'Loading...'}: Props) {\r\n    return (\r\n        <Dimmer active={true} inverted={inverted}>\r\n            <Loader content={content} />\r\n        </Dimmer>\r\n    )\r\n}","import { formatDistanceToNow } from 'date-fns'\r\nimport { Field, FieldProps, Form, Formik } from 'formik'\r\nimport { observer } from 'mobx-react-lite'\r\nimport React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Comment, Header, Loader, Segment } from 'semantic-ui-react'\r\nimport * as Yup from 'yup'\r\nimport { useStore } from '../../../app/stores/store'\r\n\r\ninterface Props {\r\n    activityId: string;\r\n}\r\n\r\nexport default observer(function ActivityDetailedChat({ activityId }: Props) {\r\n    const { commentStore } = useStore();\r\n\r\n    useEffect(() => {\r\n        if (activityId) {\r\n            commentStore.createHubConnection(activityId);\r\n        }\r\n        return () => {\r\n            commentStore.clearComments();\r\n        }\r\n    }, [commentStore, activityId])\r\n    return (\r\n        <>\r\n            <Segment\r\n                textAlign='center'\r\n                attached='top'\r\n                inverted\r\n                color='teal'\r\n                style={{ border: 'none' }}\r\n            >\r\n                <Header>Chat about this event</Header>\r\n            </Segment>\r\n            <Segment attached clearing>\r\n                <Formik\r\n                    onSubmit={(values, { resetForm }) => commentStore.addComment(values).then(() => resetForm())}\r\n                    initialValues={{ body: '' }}\r\n                    validationSchema={Yup.object({\r\n                        body: Yup.string().required()\r\n                    })}\r\n                >\r\n                    {({ isSubmitting, isValid, handleSubmit }) => (\r\n                        <Form className='ui form'>\r\n                            <Field name='body'>\r\n                                {(props: FieldProps) => (\r\n                                    <div style={{ position: 'relative' }}>\r\n                                        <Loader active={isSubmitting} />\r\n                                        <textarea\r\n                                            placeholder='Enter your comment (Enter to submit, SHIFT + enter for a new line)'\r\n                                            rows={2}\r\n                                            {...props.field}\r\n                                            onKeyPress={e => {\r\n                                                if (e.key === 'Enter' && e.shiftKey) {\r\n                                                    return;\r\n                                                }\r\n\r\n                                                if (e.key === 'Enter' && !e.shiftKey) {\r\n                                                    e.preventDefault();\r\n                                                    isValid && handleSubmit();\r\n                                                }\r\n                                            }}\r\n                                        />\r\n                                    </div>\r\n                                )}\r\n                            </Field>\r\n                        </Form>\r\n                    )}\r\n                </Formik>\r\n                <Comment.Group>\r\n                    {commentStore.comments.map(comment => (\r\n                        <Comment key={comment.id}>\r\n                            <Comment.Avatar src={comment.image || '/assets/user.png'} />\r\n                            <Comment.Content>\r\n                                <Comment.Author as={Link} to={`/profiles/${comment.username}`}>{comment.displayName}</Comment.Author>\r\n                                <Comment.Metadata>\r\n                                    <div>{formatDistanceToNow(comment.createdAt)} ago</div>\r\n                                </Comment.Metadata>\r\n                                <Comment.Text style={{ whiteSpace: 'pre-wrap' }}>{comment.body}</Comment.Text>\r\n                            </Comment.Content>\r\n                        </Comment>\r\n                    ))}\r\n                </Comment.Group>\r\n            </Segment>\r\n        </>\r\n\r\n    )\r\n})","import { format } from 'date-fns';\r\nimport { observer } from 'mobx-react-lite';\r\nimport React from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { Button, Header, Image, Item, Label, Segment } from 'semantic-ui-react';\r\nimport { Activity } from '../../../app/models/activity';\r\nimport { useStore } from '../../../app/stores/store';\r\n\r\nconst activityImageStyle = {\r\n    filter: 'brightness(30%)'\r\n};\r\n\r\nconst activityImageTextStyle = {\r\n    position: 'absolute',\r\n    bottom: '5%',\r\n    left: '5%',\r\n    width: '100%',\r\n    height: 'auto',\r\n    color: 'white'\r\n};\r\n\r\ninterface Props {\r\n    activity: Activity\r\n}\r\n\r\nexport default observer(function ActivityDetailedHeader({ activity }: Props) {\r\n    const { activityStore: { updateAttendance, loading, cancelActivityToggle } } = useStore();\r\n\r\n    return (\r\n        <Segment.Group>\r\n            <Segment basic attached='top' style={{ padding: '0' }}>\r\n                {activity.isCancelled &&\r\n                    <Label style={{ position: 'absolute', zIndex: 1000, left: -14, top: 20 }} ribbon color='red' content='Cancelled' />\r\n                }\r\n                <Image src={`/assets/categoryImages/${activity.category}.jpg`} fluid style={activityImageStyle} />\r\n                <Segment style={activityImageTextStyle} basic>\r\n                    <Item.Group>\r\n                        <Item>\r\n                            <Item.Content>\r\n                                <Header\r\n                                    size='huge'\r\n                                    content={activity.title}\r\n                                    style={{ color: 'white' }}\r\n                                />\r\n                                <p>{format(activity.date!, 'dd MMM yyyy')}</p>\r\n                                <p>Hosted by <strong><Link to={`/profiles/${activity.host?.username}`}>{activity.host?.displayName}</Link></strong></p>\r\n                            </Item.Content>\r\n                        </Item>\r\n                    </Item.Group>\r\n                </Segment>\r\n            </Segment>\r\n            <Segment clearing attached='bottom'>\r\n                {activity.isHost ? (\r\n                    <>\r\n                        <Button\r\n                            color={activity.isCancelled ? 'green' : 'red'}\r\n                            floated='left'\r\n                            basic\r\n                            content={activity.isCancelled ? 'Re-activate Activity' : 'Cancel Activity'}\r\n                            onClick={cancelActivityToggle}\r\n                            loading={loading}\r\n                        />\r\n                        <Button\r\n                            disabled={activity.isCancelled}\r\n                            as={Link}\r\n                            to={`/manage/${activity.id}`}\r\n                            color='orange'\r\n                            floated='right'\r\n                            content='Manage Event'\r\n                        />\r\n                    </>\r\n                ) : activity.isGoing ? (\r\n                    <Button\r\n                        loading={loading}\r\n                        onClick={updateAttendance}\r\n                        content='Cancel Attendance'\r\n                    />\r\n                ) : (\r\n                    <Button\r\n                        disabled={activity.isCancelled}\r\n                        loading={loading}\r\n                        onClick={updateAttendance}\r\n                        color='teal'\r\n                        content='Join'\r\n                    />\r\n                )}\r\n            </Segment>\r\n        </Segment.Group>\r\n    )\r\n})\r\n","import { format } from 'date-fns';\r\nimport { observer } from 'mobx-react-lite';\r\nimport React from 'react'\r\nimport { Segment, Grid, Icon } from 'semantic-ui-react'\r\nimport { Activity } from \"../../../app/models/activity\";\r\n\r\ninterface Props {\r\n    activity: Activity\r\n}\r\n\r\nexport default observer(function ActivityDetailedInfo({ activity }: Props) {\r\n    return (\r\n        <Segment.Group>\r\n            <Segment attached='top'>\r\n                <Grid>\r\n                    <Grid.Column width={1}>\r\n                        <Icon size='large' color='teal' name='info' />\r\n                    </Grid.Column>\r\n                    <Grid.Column width={15}>\r\n                        <p>{activity.description}</p>\r\n                    </Grid.Column>\r\n                </Grid>\r\n            </Segment>\r\n            <Segment attached>\r\n                <Grid verticalAlign='middle'>\r\n                    <Grid.Column width={1}>\r\n                        <Icon name='calendar' size='large' color='teal' />\r\n                    </Grid.Column>\r\n                    <Grid.Column width={15}>\r\n                        <span>\r\n                            {format(activity.date!, 'dd MMMM yyyy h:mm aa') }\r\n                        </span>\r\n                    </Grid.Column>\r\n                </Grid>\r\n            </Segment>\r\n            <Segment attached>\r\n                <Grid verticalAlign='middle'>\r\n                    <Grid.Column width={1}>\r\n                        <Icon name='marker' size='large' color='teal' />\r\n                    </Grid.Column>\r\n                    <Grid.Column width={11}>\r\n                        <span>{activity.venue}, {activity.city}</span>\r\n                    </Grid.Column>\r\n                </Grid>\r\n            </Segment>\r\n        </Segment.Group>\r\n    )\r\n})","import React from 'react'\r\nimport { Segment, List, Label, Item, Image } from 'semantic-ui-react'\r\nimport { Link } from 'react-router-dom'\r\nimport { observer } from 'mobx-react-lite'\r\nimport { Activity } from '../../../app/models/activity'\r\n\r\ninterface Props {\r\n    activity: Activity;\r\n}\r\n\r\nexport default observer(function ActivityDetailedSidebar({ activity: { attendees, host } }: Props) {\r\n    if (!attendees) return null;\r\n    return (\r\n        <>\r\n            <Segment\r\n                textAlign='center'\r\n                style={{ border: 'none' }}\r\n                attached='top'\r\n                secondary\r\n                inverted\r\n                color='teal'\r\n            >\r\n                {attendees.length} {attendees.length === 1 ? 'Person' : 'People'} going\r\n            </Segment>\r\n            <Segment attached>\r\n                <List relaxed divided>\r\n                    {attendees.map(attendee => (\r\n                        <Item style={{ position: 'relative' }} key={attendee.username}>\r\n                            {attendee.username === host?.username &&\r\n                                <Label\r\n                                    style={{ position: 'absolute' }}\r\n                                    color='orange'\r\n                                    ribbon='right'\r\n                                >\r\n                                    Host\r\n                                </Label>}\r\n                            <Image size='tiny' src={attendee.image || '/assets/user.png'} />\r\n                            <Item.Content verticalAlign='middle'>\r\n                                <Item.Header as='h3'>\r\n                                    <Link to={`/profiles/${attendee.username}`}>{attendee.displayName}</Link>\r\n                                </Item.Header>\r\n                                {attendee.following &&\r\n                                <Item.Extra style={{ color: 'orange' }}>Following</Item.Extra>}\r\n                            </Item.Content>\r\n                        </Item>\r\n                    ))}\r\n                </List>\r\n            </Segment>\r\n        </>\r\n\r\n    )\r\n})","import { observer } from \"mobx-react-lite\";\r\nimport React, { useEffect } from \"react\";\r\nimport { useParams } from \"react-router\";\r\nimport { Grid } from \"semantic-ui-react\";\r\nimport LoadingComponent from \"../../../app/layout/LoadingComponent\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\nimport ActivityDetailedChat from \"./ActivityDetailedChat\";\r\nimport ActivityDetailedHeader from \"./ActivityDetailedHeader\";\r\nimport ActivityDetailedInfo from \"./ActivityDetailedInfo\";\r\nimport ActivityDetailedSidebar from \"./ActivityDetailedSidebar\";\r\n\r\nexport default observer(function ActivityDetails() {\r\n    const {activityStore} = useStore();\r\n    const {selectedActivity: activity, loadActivity, loadingInitial, clearSelectedActivity} = activityStore;\r\n    const {id} = useParams<{id:string}>();\r\n\r\n    useEffect(() => {\r\n        if(id) loadActivity(id);\r\n        return () => clearSelectedActivity();\r\n    },[id, loadActivity, clearSelectedActivity])\r\n\r\n    if (loadingInitial || !activity) return <LoadingComponent />;\r\n\r\n    return (\r\n        <Grid>\r\n            <Grid.Column width={10}>\r\n                <ActivityDetailedHeader activity={activity} />\r\n                <ActivityDetailedInfo activity={activity} />\r\n                <ActivityDetailedChat activityId={activity.id} />\r\n            </Grid.Column>\r\n            <Grid.Column width={6}>\r\n                <ActivityDetailedSidebar activity={activity} />\r\n            </Grid.Column>\r\n        </Grid>\r\n    )\r\n})","import { useField } from 'formik'\r\nimport React from 'react'\r\nimport { Form, Label } from 'semantic-ui-react';\r\nimport DatePicker, {ReactDatePickerProps} from 'react-datepicker'\r\n\r\nexport default function MyDateInput(props: Partial<ReactDatePickerProps>) {\r\n    const [field, meta, helpers] = useField(props.name!);\r\n    return (\r\n        <Form.Field error={meta.touched && !!meta.error}>\r\n            <DatePicker \r\n                {...field}\r\n                {...props}\r\n                selected={(field.value && new Date(field.value)) || null}\r\n                onChange={value => helpers.setValue(value)}       \r\n            />\r\n            {meta.touched && meta.error ? (\r\n                <Label basic color='red'>{meta.error}</Label>\r\n            ) : null}\r\n        </Form.Field>\r\n    )\r\n}\r\n","import { useField } from 'formik'\r\nimport React from 'react'\r\nimport { Form, Label, Select } from 'semantic-ui-react';\r\n\r\ninterface Props {\r\n    placeholder: string;\r\n    name: string;\r\n    options: any;\r\n    label?: string;\r\n}\r\n\r\nexport default function MySelectInput(props: Props) {\r\n    const [field, meta, helpers] = useField(props.name);\r\n    return (\r\n        <Form.Field error={meta.touched && !!meta.error}>\r\n            <label>{props.label}</label>\r\n            <Select\r\n                clearable\r\n                options={props.options}\r\n                value={field.value || null}\r\n                onChange={(e, d) => helpers.setValue(d.value)}\r\n                onBlur={() => helpers.setTouched(true)}\r\n                placeholder={props.placeholder}\r\n            />\r\n            {meta.touched && meta.error ? (\r\n                <Label basic color='red'>{meta.error}</Label>\r\n            ) : null}\r\n        </Form.Field>\r\n    )\r\n}\r\n","import { useField } from 'formik'\r\nimport React from 'react'\r\nimport { Form, Label } from 'semantic-ui-react';\r\n\r\ninterface Props {\r\n    placeholder: string;\r\n    name: string;\r\n    rows: number;\r\n    label?: string;\r\n}\r\n\r\nexport default function MyTextArea(props: Props) {\r\n    const [field, meta] = useField(props.name);\r\n    return (\r\n        <Form.Field error={meta.touched && !!meta.error}>\r\n            <label>{props.label}</label>\r\n            <textarea {...field} {...props} />\r\n            {meta.touched && meta.error ? (\r\n                <Label basic color='red'>{meta.error}</Label>\r\n            ) : null}\r\n        </Form.Field>\r\n    )\r\n}\r\n","import { useField } from 'formik'\r\nimport React from 'react'\r\nimport { Form, Label } from 'semantic-ui-react';\r\n\r\ninterface Props {\r\n    placeholder: string;\r\n    name: string;\r\n    type?: string;\r\n    label?: string;\r\n}\r\n\r\nexport default function MyTextInput(props: Props) {\r\n    const [field, meta] = useField(props.name);\r\n    return (\r\n        <Form.Field error={meta.touched && !!meta.error}>\r\n            <label>{props.label}</label>\r\n            <input {...field} {...props} />\r\n            {meta.touched && meta.error ? (\r\n                <Label basic color='red'>{meta.error}</Label>\r\n            ) : null}\r\n        </Form.Field>\r\n    )\r\n}\r\n","export const categoryOptions = [\r\n    { text: 'Drinks', value: 'drinks' },\r\n    { text: 'Culture', value: 'culture' },\r\n    { text: 'Film', value: 'film' },\r\n    { text: 'Food', value: 'food' },\r\n    { text: 'Music', value: 'music' },\r\n    { text: 'Travel', value: 'travel' },\r\n]","import { Form, Formik } from \"formik\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useHistory, useParams } from \"react-router\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button, Header, Segment } from \"semantic-ui-react\";\r\nimport { v4 as uuid } from \"uuid\";\r\nimport * as Yup from 'yup';\r\nimport MyDateInput from \"../../../app/common/form/MyDateInput\";\r\nimport MySelectInput from \"../../../app/common/form/MySelectionInput\";\r\nimport MyTextArea from \"../../../app/common/form/MyTextArea\";\r\nimport MyTextInput from \"../../../app/common/form/MyTextInput\";\r\nimport { categoryOptions } from \"../../../app/common/options/categoryOptions\";\r\nimport LoadingComponent from \"../../../app/layout/LoadingComponent\";\r\nimport { ActivityFormValues } from \"../../../app/models/activity\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\n\r\nexport default observer(function ActivityForm() {\r\n    const history = useHistory();\r\n    const { activityStore } = useStore();\r\n    const { createActivity, updateActivity, loadActivity, loadingInitial } = activityStore\r\n    const { id } = useParams<{ id: string }>();\r\n\r\n    const [activity, setActivity] = useState<ActivityFormValues>(new ActivityFormValues());\r\n\r\n    const validationSchema = Yup.object({\r\n        title: Yup.string().required('The activity title is required'),\r\n        description: Yup.string().required('The activity decription is required'),\r\n        category: Yup.string().required(),\r\n        date: Yup.string().required('Date is required').nullable(),\r\n        venue: Yup.string().required(),\r\n        city: Yup.string().required(),\r\n\r\n    })\r\n\r\n    useEffect(() => {\r\n        if (id) loadActivity(id).then(activity => setActivity(new ActivityFormValues(activity)))\r\n    }, [id, loadActivity]);\r\n\r\n    function handleFormSubmit(activity: ActivityFormValues) {\r\n        if (!activity.id) {\r\n            let newActivity = {\r\n                ...activity,\r\n                id: uuid()\r\n            };\r\n            createActivity(newActivity).then(() => history.push(`/activities/${newActivity.id}`))\r\n        } else {\r\n            updateActivity(activity).then(() => history.push(`/activities/${activity.id}`))\r\n        }\r\n    }\r\n\r\n    if (loadingInitial) return <LoadingComponent content='Loading activity...' />\r\n\r\n    return (\r\n        <Segment clearing>\r\n            <Header content='Activity Details' color='teal' />\r\n            <Formik\r\n                validationSchema={validationSchema}\r\n                enableReinitialize\r\n                initialValues={activity}\r\n                onSubmit={values => handleFormSubmit(values)}>\r\n                {({ handleSubmit, isValid, isSubmitting, dirty }) => (\r\n                    <Form className='ui form' onSubmit={handleSubmit} autoComplete='off'>\r\n                        <MyTextInput name='title' placeholder='Title' />\r\n                        <MyTextArea rows={3} placeholder='Description' name='description' />\r\n                        <MySelectInput options={categoryOptions} placeholder='Category' name='category' />\r\n                        <MyDateInput\r\n                            placeholderText='Date'\r\n                            name='date'\r\n                            showTimeSelect\r\n                            timeCaption='time'\r\n                            dateFormat='MMMM d, yyyy h:mm aa'\r\n                        />\r\n                        <Header content='Location Details' color='teal' />\r\n                        <MyTextInput placeholder='City' name='city' />\r\n                        <MyTextInput placeholder='Venue' name='venue' />\r\n                        <Button\r\n                            disabled={isSubmitting || !dirty || !isValid}\r\n                            loading={isSubmitting}\r\n                            floated='right'\r\n                            positive type='submit'\r\n                            content='Submit'\r\n                        />\r\n                        <Button as={Link} to='/activities' floated='right' type='button' content='Cancel' />\r\n                    </Form>\r\n                )}\r\n            </Formik>\r\n        </Segment>\r\n    )\r\n})","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Button, Header, Icon, Segment } from 'semantic-ui-react'\r\n\r\nexport default function NotFound() {\r\n    return (\r\n        <Segment placeholder>\r\n            <Header icon>\r\n                <Icon name='search' />\r\n                Oops - We've looked everywhere and could not find this.\r\n            </Header>\r\n            <Segment.Inline>\r\n                <Button as={Link} to='/activities' primary>\r\n                    Return to activities page\r\n                </Button>\r\n            </Segment.Inline>\r\n        </Segment>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Message } from 'semantic-ui-react'\r\n\r\ninterface Props {\r\n    errors: any;\r\n}\r\n\r\nexport default function ValidationErrors({errors}: Props) {\r\n    return (\r\n        <Message error>\r\n            {errors && (\r\n                <Message.List>\r\n                    {errors.map((err: any, i: any) => (\r\n                        <Message.Item key={i}>{err}</Message.Item>\r\n                    ))}\r\n                </Message.List>\r\n            )}\r\n        </Message>\r\n    )\r\n}\r\n","import React, { useState } from 'react';\r\nimport {Button, Header, Segment} from \"semantic-ui-react\";\r\nimport axios from 'axios';\r\nimport ValidationErrors from './ValidationErrors';\r\n\r\nexport default function TestErrors() {\r\n    const baseUrl = process.env.REACT_APP_API_URL;\r\n    const [errors, setErrors] = useState(null);\r\n\r\n    function handleNotFound() {\r\n        axios.get(baseUrl + 'buggy/not-found').catch(err => console.log(err.response));\r\n    }\r\n\r\n    function handleBadRequest() {\r\n        axios.get(baseUrl + 'buggy/bad-request').catch(err => console.log(err.response));\r\n    }\r\n\r\n    function handleServerError() {\r\n        axios.get(baseUrl + 'buggy/server-error').catch(err => console.log(err.response));\r\n    }\r\n\r\n    function handleUnauthorised() {\r\n        axios.get(baseUrl + 'buggy/unauthorised').catch(err => console.log(err.response));\r\n    }\r\n\r\n    function handleBadGuid() {\r\n        axios.get(baseUrl + 'activities/notaguid').catch(err => console.log(err));\r\n    }\r\n\r\n    function handleValidationError() {\r\n        axios.post(baseUrl + 'activities', {}).catch(err => setErrors(err));\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Header as='h1' content='Test Error component' />\r\n            <Segment>\r\n                <Button.Group widths='7'>\r\n                    <Button onClick={handleNotFound} content='Not Found' basic primary />\r\n                    <Button onClick={handleBadRequest} content='Bad Request' basic primary />\r\n                    <Button onClick={handleValidationError} content='Validation Error' basic primary />\r\n                    <Button onClick={handleServerError} content='Server Error' basic primary />\r\n                    <Button onClick={handleUnauthorised} content='Unauthorised' basic primary />\r\n                    <Button onClick={handleBadGuid} content='Bad Guid' basic primary />\r\n                </Button.Group>\r\n            </Segment>\r\n            {errors &&\r\n                <ValidationErrors errors={errors} />\r\n            }\r\n        </>\r\n    )\r\n}","import { ErrorMessage, Form, Formik } from 'formik'\r\nimport { observer } from 'mobx-react-lite'\r\nimport React from 'react'\r\nimport { Button, Header, Label } from 'semantic-ui-react'\r\nimport MyTextInput from '../../app/common/form/MyTextInput'\r\nimport { useStore } from '../../app/stores/store'\r\n\r\nexport default observer(function LoginForm() {\r\n    const {userStore} = useStore();\r\n    return (\r\n        <Formik\r\n            initialValues={{email:'', password:'', error: null}}\r\n            onSubmit={(values, {setErrors}) => userStore.login(values).catch(error => setErrors({error: 'Invalid email or password'}))}\r\n        >\r\n            {({handleSubmit, isSubmitting, errors}) => (\r\n                <Form className='ui form' onSubmit={handleSubmit} autoComplete='off'>\r\n                    <Header as='h2' content='Login to Reactivities' color='teal' textAlign='center' />\r\n                    <MyTextInput name='email' placeholder='Email'/>\r\n                    <MyTextInput name='password' placeholder='Password' type='password' />\r\n                    <ErrorMessage\r\n                        name='error' render={() => <Label style={{marginBottom: 10}} basic color='red' content={errors.error} />}\r\n                    />\r\n                    <Button loading={isSubmitting} positive content='Login' type='submit' fluid />\r\n                </Form>\r\n            )}\r\n        </Formik>\r\n    )\r\n})\r\n","import { ErrorMessage, Form, Formik } from 'formik'\r\nimport { observer } from 'mobx-react-lite'\r\nimport React from 'react'\r\nimport { Button, Header } from 'semantic-ui-react'\r\nimport * as Yup from 'yup'\r\nimport MyTextInput from '../../app/common/form/MyTextInput'\r\nimport { useStore } from '../../app/stores/store'\r\nimport ValidationErrors from '../errors/ValidationErrors'\r\n\r\nexport default observer(function RegisterForm() {\r\n    const {userStore} = useStore();\r\n    return (\r\n        <Formik\r\n            initialValues={{displayName:'', username:'', email:'', password:'', error: null}}\r\n            onSubmit={(values, {setErrors}) => userStore.register(values).catch(error => setErrors({error}))}\r\n            validationSchema={Yup.object({\r\n                displayName: Yup.string().required(),\r\n                username: Yup.string().required(),\r\n                email: Yup.string().required().email(),\r\n                password: Yup.string().required(),\r\n            })}\r\n        >\r\n            {({handleSubmit, isSubmitting, errors, isValid, dirty}) => (\r\n                <Form className='ui form error' onSubmit={handleSubmit} autoComplete='off'>\r\n                    <Header as='h2' content='Sign up to Reactivities' color='teal' textAlign='center' />\r\n                    <MyTextInput name='displayName' placeholder='Display Name'/>\r\n                    <MyTextInput name='username' placeholder='Username'/>\r\n                    <MyTextInput name='email' placeholder='Email'/>\r\n                    <MyTextInput name='password' placeholder='Password' type='password' />\r\n                    <ErrorMessage\r\n                        name='error' render={() => <ValidationErrors errors={errors.error} />}\r\n                    />\r\n                    <Button loading={isSubmitting} positive content='Login' type='submit' fluid disabled={!isValid || !dirty || isSubmitting} />\r\n                </Form>\r\n            )}\r\n        </Formik>\r\n    )\r\n})\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button, Container, Divider, Header, Image, Segment } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../app/stores/store\";\r\nimport LoginForm from \"../users/LoginForm\";\r\nimport RegisterForm from \"../users/RegisterForm\";\r\n\r\n\r\nexport default observer(function HomePage() {\r\n    const { userStore, modalStore } = useStore();\r\n    return (\r\n        <Segment inverted textAlign='center' vertical className='masthead'>\r\n            <Container text >\r\n                <Header as='h1' inverted>\r\n                    <Image size='massive' src='/assets/logo.png' alt='logo' style={{ marginBottom: 12 }} />\r\n                    Reactivities\r\n                </Header>\r\n                {userStore.isLoggedIn ? (\r\n                    <>\r\n                        <Header as='h2' inverted content='Welcome to Reactivities' />\r\n                        <Button as={Link} to='/activities' size='huge' inverted>\r\n                            Go to Activities!\r\n                        </Button>\r\n                    </>\r\n                ) : (\r\n                    <>\r\n                        <Button onClick={() => modalStore.openModal(<LoginForm />)} size='huge' inverted>\r\n                            Login!\r\n                        </Button>\r\n                        <Button onClick={() => modalStore.openModal(<RegisterForm />)} size='huge' inverted>\r\n                            Register!\r\n                        </Button>\r\n                        <Divider horizontal inverted>Or</Divider>\r\n                        <Button \r\n                            loading={userStore.fbLoading}\r\n                            size='huge'\r\n                            inverted\r\n                            color='facebook'\r\n                            content='Login with Facebook'\r\n                            onClick={() => userStore.facebookLogin()}\r\n                        />\r\n                    </>\r\n                )}\r\n            </Container>\r\n        </Segment>\r\n    )\r\n})","import { Form, Formik } from 'formik';\r\nimport { observer } from 'mobx-react-lite'\r\nimport React from 'react'\r\nimport { useStore } from '../../app/stores/store'\r\nimport * as Yup from 'yup'\r\nimport MyTextInput from '../../app/common/form/MyTextInput';\r\nimport MyTextArea from '../../app/common/form/MyTextArea';\r\nimport { Button } from 'semantic-ui-react';\r\n\r\ninterface Props {\r\n    setEditMode: (editMode: boolean) => void;\r\n}\r\n\r\nexport default observer(function ProfileEditForm({ setEditMode }: Props) {\r\n    const { profileStore: { profile, updateProfile } } = useStore();\r\n    return (\r\n        <Formik\r\n            initialValues={{ displayName: profile?.displayName, bio: profile?.bio }}\r\n            onSubmit={values => {\r\n                updateProfile(values).then(() => {\r\n                    setEditMode(false);\r\n                })\r\n            }}\r\n            validationSchema={Yup.object({\r\n                displayName: Yup.string().required()\r\n            })}\r\n        >\r\n            {({ isSubmitting, isValid, dirty }) => (\r\n                <Form className='ui form'>\r\n                    <MyTextInput placeholder='Display Name' name='displayName' />\r\n                    <MyTextArea rows={3} placeholder='Add your bio' name='bio' />\r\n                    <Button\r\n                        positive\r\n                        type='submit'\r\n                        loading={isSubmitting}\r\n                        content='Update profile'\r\n                        floated='right'\r\n                        disabled={!isValid || !dirty}\r\n                    />\r\n                </Form>\r\n            )}\r\n        </Formik>\r\n    )\r\n})\r\n","import { observer } from 'mobx-react-lite'\r\nimport React, { useState } from 'react'\r\nimport { Button, Grid, Header, Tab } from 'semantic-ui-react';\r\nimport { useStore } from '../../app/stores/store'\r\nimport ProfileEditForm from './ProfileEditForm';\r\n\r\nexport default observer(function ProfileAbout() {\r\n    const {profileStore} = useStore();\r\n    const {isCurrentUser, profile} = profileStore;\r\n    const [editMode, setEditMode] = useState(false)\r\n\r\n    return (\r\n        <Tab.Pane>\r\n            <Grid>\r\n                <Grid.Column width='16'>\r\n                    <Header floated='left' icon='user' content={`About ${profile?.displayName}`} />\r\n                    {isCurrentUser && (\r\n                        <Button \r\n                            floated='right'\r\n                            basic\r\n                            content={editMode ? 'Cancel' : 'Edit Profile'}\r\n                            onClick={() => setEditMode(!editMode)}\r\n                        />\r\n                    )}\r\n                </Grid.Column>\r\n                <Grid.Column width='16'>\r\n                    {editMode ? <ProfileEditForm setEditMode={setEditMode} /> : <span style={{whiteSpace: 'pre-wrap'}}>{profile?.bio}</span>}\r\n                </Grid.Column>\r\n            </Grid>\r\n        </Tab.Pane>\r\n    )\r\n})\r\n","import { format } from 'date-fns'\r\nimport { observer } from 'mobx-react-lite'\r\nimport React, { SyntheticEvent, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Card, Grid, Header, Image, Tab, TabProps } from 'semantic-ui-react'\r\nimport { UserActivity } from '../../app/models/profile'\r\nimport { useStore } from '../../app/stores/store'\r\n\r\nconst panes = [\r\n    { menuItem: 'Future Events', pane: { key: 'future' } },\r\n    { menuItem: 'Past Events', pane: { key: 'past' } },\r\n    { menuItem: 'Hosting', pane: { key: 'hosting' } }\r\n]\r\n\r\nexport default observer(function ProfileActivities() {\r\n    const { profileStore } = useStore();\r\n    const { loadUserActivities, profile, loadingActivities, userActivities } = profileStore;\r\n\r\n    useEffect(() => {\r\n        loadUserActivities(profile!.username);\r\n    }, [loadUserActivities, profile])\r\n\r\n    const handleTabChange = (e: SyntheticEvent, data: TabProps) => {\r\n        loadUserActivities(profile!.username, panes[data.activeIndex as number].pane.key)\r\n    };\r\n\r\n    return (\r\n        <Tab.Pane loading={loadingActivities}>\r\n            <Grid>\r\n                <Grid.Column width={16}>\r\n                    <Header floated='left' icon='calendar'\r\n                        content={'Activities'} />\r\n                </Grid.Column>\r\n                <Grid.Column width={16}>\r\n                    <Tab\r\n                        panes={panes}\r\n                        menu={{ secondary: true, pointing: true }}\r\n                        onTabChange={(e, data) => handleTabChange(e, data)}\r\n                    />\r\n                    <br />\r\n                    <Card.Group itemsPerRow={4}>\r\n                        {userActivities.map((activity: UserActivity) => (\r\n                            <Card\r\n                                as={Link}\r\n                                to={`/activities/${activity.id}`}\r\n                                key={activity.id}\r\n                            >\r\n                                <Image\r\n                                    src={`/assets/categoryImages/${activity.category}.jpg`}\r\n                                    style={{ minHeight: 100, objectFit: 'cover' }}\r\n                                />\r\n                                <Card.Content>\r\n                                    <Card.Header\r\n                                        textAlign='center'>{activity.title}</Card.Header>\r\n                                    <Card.Meta textAlign='center'>\r\n                                        <div>{format(new Date(activity.date), 'do LLL')}</div>\r\n                                        <div>{format(new Date(activity.date), 'h:mm a')}</div>\r\n                                    </Card.Meta>\r\n                                </Card.Content>\r\n                            </Card>\r\n                        ))}\r\n                    </Card.Group>\r\n                </Grid.Column>\r\n            </Grid>\r\n        </Tab.Pane>\r\n    );\r\n})","import { observer } from 'mobx-react-lite'\r\nimport React from 'react'\r\nimport { Card, Grid, Header, Tab } from 'semantic-ui-react';\r\nimport { useStore } from '../../app/stores/store'\r\nimport ProfileCard from './ProfileCard';\r\n\r\nexport default observer(function ProfileFollowings() {\r\n    const { profileStore } = useStore();\r\n    const { profile, followings, loadingFollowings, activeTab } = profileStore\r\n\r\n    return (\r\n        <Tab.Pane loading={loadingFollowings}>\r\n            <Grid>\r\n                <Grid.Column width='16'>\r\n                    <Header floated='left' icon='user' content={activeTab === 3 ? `People following ${profile?.displayName}`: `People ${profile?.displayName} is following`} />\r\n                </Grid.Column>\r\n                <Grid.Column width='16'>\r\n                    <Card.Group itemsPerRow='4'>\r\n                        {followings.map(profile => (\r\n                            <ProfileCard key={profile.username} profile={profile} />\r\n                        ))}\r\n                    </Card.Group>\r\n                </Grid.Column>\r\n            </Grid>\r\n        </Tab.Pane>\r\n    )\r\n})\r\n","import React from 'react'\r\nimport { Cropper } from 'react-cropper'\r\nimport 'cropperjs/dist/cropper.css'\r\n\r\ninterface Props {\r\n    imagePreview: string;\r\n    setCropper: (cropper: Cropper) => void;\r\n}\r\n\r\nexport default function PhotoWidgetCropper({imagePreview, setCropper}: Props) {\r\n    return (\r\n        <Cropper \r\n            src={imagePreview}\r\n            style={{height: 200, width: '100%'}}\r\n            initialAspectRatio={1}\r\n            aspectRatio={1}\r\n            preview='.img-preview'\r\n            guides={false}\r\n            viewMode={1}\r\n            autoCropArea={1}\r\n            background={false}\r\n            onInitialized={cropper => setCropper(cropper)}\r\n        />\r\n    ) \r\n}","import React, { useCallback } from 'react'\r\nimport { useDropzone } from 'react-dropzone'\r\nimport { Header, Icon } from 'semantic-ui-react'\r\n\r\ninterface Props {\r\n    setFiles: (files: any) => void;\r\n}\r\n\r\nexport default function PhotoWidgetDropzone({ setFiles }: Props) {\r\n    const dzStyles = {\r\n        border: 'dashed 3px #eee',\r\n        borderColor: '#eee',\r\n        borderRadius: '5px',\r\n        paddingTop: '30px',\r\n        textAlign: 'center' as 'center',\r\n        height: 200\r\n    }\r\n\r\n    const dzActive = {\r\n        borderColor: 'green'\r\n    }\r\n\r\n    const onDrop = useCallback(acceptedFiles => {\r\n        setFiles(acceptedFiles.map((file: any) => Object.assign(file, {\r\n            preview: URL.createObjectURL(file)\r\n        })))\r\n    }, [setFiles])\r\n    const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop })\r\n\r\n    return (\r\n        <div {...getRootProps()} style={isDragActive ? { ...dzStyles, ...dzActive } : dzStyles}>\r\n            <input {...getInputProps()} />\r\n            <Icon name='upload' size='huge' />\r\n            <Header content='Drop image here' />\r\n        </div>\r\n    )\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { Button, Grid, Header } from 'semantic-ui-react';\r\nimport PhotoWidgetCropper from './PhotoWidgetCropper';\r\nimport PhotoWidgetDropzone from './PhotoWidgetDropzone';\r\n\r\ninterface Props {\r\n    loading: boolean;\r\n    uploadPhoto: (file: Blob) => void;\r\n}\r\n\r\nexport default function PhotoUploadWidget({loading, uploadPhoto}: Props) {\r\n    const [files, setFiles] = useState<any>([]);\r\n    const [cropper, setCropper] = useState<Cropper>()\r\n\r\n    function onCrop() {\r\n        if (cropper) {\r\n            cropper.getCroppedCanvas().toBlob(blob => uploadPhoto(blob!))\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            files.forEach((file: any) => URL.revokeObjectURL(file.preview))\r\n        }\r\n    }, [files])\r\n\r\n    return (\r\n        <Grid>\r\n            <Grid.Column width={4}>\r\n                <Header color='teal' sub content='Step 1 - Add Photo' />\r\n                <PhotoWidgetDropzone setFiles={setFiles} />\r\n            </Grid.Column>\r\n            <Grid.Column width={1} />\r\n            <Grid.Column width={4}>\r\n                <Header color='teal' sub content='Step 2 - Resize image' />\r\n                {files && files.length > 0 && (\r\n                    <PhotoWidgetCropper setCropper={setCropper} imagePreview={files[0].preview} />\r\n                )}\r\n            </Grid.Column>\r\n            <Grid.Column width={1} />\r\n            <Grid.Column width={4}>\r\n                <Header color='teal' sub content='Step 3 - Preview & Upload' />\r\n                {files && files.length > 0 &&\r\n                <>\r\n                    <div className='img-preview' style={{ minHeight: 200, overflow: 'hidden' }} />\r\n                    <Button.Group widths={2}>\r\n                        <Button loading={loading} onClick={onCrop} positive icon='check' />\r\n                        <Button disabled={loading} onClick={() => setFiles([])} icon='close' />\r\n                    </Button.Group>\r\n                </>}\r\n            </Grid.Column>\r\n        </Grid>\r\n    )\r\n}\r\n","import { observer } from 'mobx-react-lite'\r\nimport React, { SyntheticEvent, useState } from 'react'\r\nimport { Button, Card, Grid, Header, Image, Tab } from 'semantic-ui-react'\r\nimport PhotoUploadWidget from '../../app/common/imageUpload/PhotoUploadWidget'\r\nimport { Photo, Profile } from '../../app/models/profile'\r\nimport { useStore } from '../../app/stores/store'\r\n\r\ninterface Props {\r\n    profile: Profile;\r\n}\r\n\r\nexport default observer(function ProfilePhotos({ profile }: Props) {\r\n    const { profileStore: { isCurrentUser, uploadPhoto, uploading, loading, setMainPhoto, deletePhoto } } = useStore();\r\n    const [addPhotoMode, setAddPhotoMode] = useState(false);\r\n    const [target, setTarget] = useState('')\r\n\r\n    function handlePhotoUpload(file: Blob) {\r\n        uploadPhoto(file).then(() => setAddPhotoMode(false))\r\n    }\r\n\r\n    function handleSetMainPhoto(photo: Photo, e: SyntheticEvent<HTMLButtonElement>) {\r\n        setTarget(e.currentTarget.name);\r\n        setMainPhoto(photo);\r\n    }\r\n\r\n    function handleDeletePhoto(photo: Photo, e: SyntheticEvent<HTMLButtonElement>) {\r\n        setTarget(e.currentTarget.name);\r\n        deletePhoto(photo);\r\n    }\r\n\r\n    return (\r\n        <Tab.Pane>\r\n            <Grid>\r\n                <Grid.Column width={16}>\r\n                    <Header floated='left' icon='image' content='Photos' />\r\n                    {isCurrentUser && (\r\n                        <Button floated='right' basic content={addPhotoMode ? 'Cancel' : 'Add Photo'} onClick={() => setAddPhotoMode(!addPhotoMode)} />\r\n                    )}\r\n                </Grid.Column>\r\n                <Grid.Column width={16}>\r\n                    {addPhotoMode ? (\r\n                        <PhotoUploadWidget uploadPhoto={handlePhotoUpload} loading={uploading} />\r\n                    ) : (\r\n                        <Card.Group itemsPerRow={5}>\r\n                            {profile.photos?.map(photo => (\r\n                                <Card key={photo.id}>\r\n                                    <Image src={photo.url} />\r\n                                    {isCurrentUser && (\r\n                                        <Button.Group fluid widths={2}>\r\n                                            <Button\r\n                                                basic\r\n                                                color='green'\r\n                                                content='Main'\r\n                                                name={'main' + photo.id}\r\n                                                disabled={photo.isMain}\r\n                                                loading={target === 'main' + photo.id && loading}\r\n                                                onClick={e => handleSetMainPhoto(photo, e)}\r\n                                            />\r\n                                            <Button\r\n                                                basic\r\n                                                color='red'\r\n                                                icon='trash'\r\n                                                loading={target === photo.id && loading}\r\n                                                onClick={e => handleDeletePhoto(photo, e)}\r\n                                                disabled={photo.isMain}\r\n                                                name={photo.id}\r\n                                            />\r\n                                        </Button.Group>\r\n                                    )}\r\n                                </Card>\r\n                            ))}\r\n                        </Card.Group>\r\n                    )}\r\n                </Grid.Column>\r\n            </Grid>\r\n        </Tab.Pane>\r\n    )\r\n})\r\n","import { observer } from 'mobx-react-lite';\r\nimport React from 'react'\r\nimport { Tab } from 'semantic-ui-react'\r\nimport { Profile } from '../../app/models/profile';\r\nimport { useStore } from '../../app/stores/store';\r\nimport ProfileAbout from './ProfileAbout';\r\nimport ProfileActivities from './ProfileActivities';\r\nimport ProfileFollowings from './ProfileFollowings';\r\nimport ProfilePhotos from './ProfilePhotos'\r\n\r\ninterface Props {\r\n    profile: Profile;\r\n}\r\n\r\nexport default observer(function ProfileContent({profile}: Props) {\r\n    const {profileStore} = useStore();\r\n\r\n    const panes = [\r\n        {menuItem: 'About', render: () => <ProfileAbout />},\r\n        {menuItem: 'Photos', render: () => <ProfilePhotos profile={profile} />},\r\n        {menuItem: 'Events', render: () => <ProfileActivities />},\r\n        {menuItem: 'Followers', render: () => <ProfileFollowings />},\r\n        {menuItem: 'Following', render: () => <ProfileFollowings />},\r\n    ];\r\n\r\n    return (\r\n        <Tab\r\n            menu={{fluid: true, vertical: true}}\r\n            menuPosition='right'\r\n            panes={panes}\r\n            onTabChange={(e, data) => profileStore.setActiveTab(data.activeIndex)}\r\n        />\r\n    )\r\n})\r\n","import { observer } from 'mobx-react-lite'\r\nimport { Divider, Grid, Header, Item, Segment, Statistic } from 'semantic-ui-react'\r\nimport { Profile } from '../../app/models/profile'\r\nimport FollowButton from './FollowButton'\r\n\r\ninterface Props {\r\n    profile: Profile; \r\n}\r\n\r\nexport default observer(function ProfileHeader({profile}: Props) {\r\n    return (\r\n        <Segment>\r\n            <Grid>\r\n                <Grid.Column width={12}>\r\n                    <Item.Group>\r\n                        <Item>\r\n                            <Item.Image avatar size='small' src={profile.image || '/assets/user.png'} />\r\n                            <Item.Content verticalAlign='middle'>\r\n                                <Header as='h1' content={profile.displayName} />\r\n                            </Item.Content>\r\n                        </Item>\r\n                    </Item.Group>\r\n                </Grid.Column>\r\n                <Grid.Column width={4}>\r\n                    <Statistic.Group widths={2}>\r\n                        <Statistic label='Followers' value={profile.followersCount} />\r\n                        <Statistic label='Following' value={profile.followingCount} />\r\n                    </Statistic.Group>\r\n                    <Divider />\r\n                    <FollowButton profile={profile} />\r\n                </Grid.Column>\r\n            </Grid>\r\n        </Segment>\r\n    )\r\n})\r\n","import { observer } from 'mobx-react-lite'\r\nimport React, { useEffect } from 'react'\r\nimport { useParams } from 'react-router'\r\nimport { Grid } from 'semantic-ui-react'\r\nimport LoadingComponent from '../../app/layout/LoadingComponent'\r\nimport { useStore } from '../../app/stores/store'\r\nimport ProfileContent from './ProfileContent'\r\nimport ProfileHeader from './ProfileHeader'\r\n\r\nexport default observer(function ProfilePage() {\r\n    const { username } = useParams<{ username: string }>();\r\n    const { profileStore } = useStore();\r\n    const { loadingProfile, loadProfile, profile, setActiveTab } = profileStore;\r\n\r\n    useEffect(() => {\r\n        loadProfile(username);\r\n        return () => {\r\n            setActiveTab(0);\r\n        }\r\n    }, [loadProfile, username, setActiveTab])\r\n\r\n    if (loadingProfile) return <LoadingComponent content='Loading profile...' />\r\n\r\n    return (\r\n        <Grid>\r\n            <Grid.Column width={16}>\r\n                {profile &&\r\n                    <>\r\n                        <ProfileHeader profile={profile} />\r\n                        <ProfileContent profile={profile} />\r\n                    </>\r\n                }\r\n            </Grid.Column>\r\n        </Grid>\r\n    )\r\n})\r\n","import { observer } from 'mobx-react-lite';\r\nimport React from 'react'\r\nimport { Container, Header, Segment } from 'semantic-ui-react';\r\nimport { useStore } from '../../app/stores/store'\r\n\r\nexport default observer(function ServerError() {\r\n    const { commonStore } = useStore();\r\n\r\n    return (\r\n        <Container>\r\n            <Header as='h1' content='Server Error' />\r\n            <Header sub as='h5' color='red' content={commonStore.error?.message} />\r\n            {commonStore.error?.details &&\r\n                <Segment>\r\n                    <Header as='h4' content='Stack trace' color='teal' />\r\n                    <code style={{marginTop: '10px'}}>{commonStore.error.details}</code>\r\n                </Segment>\r\n            }\r\n        </Container>\r\n    )\r\n})\r\n","import { observer } from 'mobx-react-lite';\r\nimport React from 'react'\r\nimport { Modal } from 'semantic-ui-react';\r\nimport { useStore } from '../../stores/store'\r\n\r\nexport default observer(function ModalContainer() {\r\n    const {modalStore} = useStore();\r\n\r\n    return (\r\n        <Modal open={modalStore.modal.open} onClose={modalStore.closeModal} size='mini'>\r\n            <Modal.Content>\r\n                {modalStore.modal.body}\r\n            </Modal.Content>\r\n        </Modal>\r\n    )\r\n})\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Link, NavLink } from \"react-router-dom\";\r\nimport { Button, Container, Dropdown, Image, Menu } from \"semantic-ui-react\";\r\nimport { useStore } from \"../stores/store\";\r\n\r\nexport default observer(function NavBar() {\r\n    const { userStore: { user, logout } } = useStore();\r\n\r\n    return (\r\n        <Menu inverted fixed='top'>\r\n            <Container>\r\n                <Menu.Item as={NavLink} to='/' exact header>\r\n                    <img src=\"/assets/logo.png\" alt=\"logo\" style={{ marginRight: '10px' }} />\r\n                    Reactivities\r\n                </Menu.Item>\r\n                <Menu.Item as={NavLink} to='/activities' name=\"Activities\" />\r\n                <Menu.Item as={NavLink} to='/errors' name=\"Errors\" />\r\n                <Menu.Item>\r\n                    <Button as={NavLink} to='/createActivity' positive content=\"Create Activity\" />\r\n                </Menu.Item>\r\n                <Menu.Item position='right'>\r\n                    <Image src={user?.image || '/assets/user.png'} avatar spaced='right' />\r\n                    <Dropdown pointing='top left' text={user?.displayName}>\r\n                        <Dropdown.Menu>\r\n                            <Dropdown.Item as={Link} to={`/profiles/${user?.username}`} text='My profile' icon='user' />\r\n                            <Dropdown.Item onClick={logout} text='Logout' icon='power' />\r\n                        </Dropdown.Menu>\r\n                    </Dropdown>\r\n                </Menu.Item>\r\n            </Container>\r\n        </Menu>\r\n    )\r\n})","import { Redirect, Route, RouteComponentProps, RouteProps } from \"react-router\";\r\nimport { useStore } from \"../stores/store\"\r\n\r\ninterface Props extends RouteProps {\r\n    component: React.ComponentType<RouteComponentProps<any>> | React.ComponentType<any>;\r\n}\r\n\r\nexport default function PrivateRoute({component: Component, ...rest}: Props) {\r\n    const { userStore: {isLoggedIn} } = useStore();\r\n\r\n    return (\r\n        <Route \r\n            {...rest}\r\n            render={(props) => isLoggedIn ? <Component {...props} /> : <Redirect to='/' />}\r\n        />\r\n    )\r\n}\r\n","import { observer } from 'mobx-react-lite';\r\nimport React, { useEffect } from 'react';\r\nimport { Route, Switch, useLocation } from 'react-router';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport { Container } from 'semantic-ui-react';\r\nimport ActivityDashboard from '../../features/activities/dashboard/ActivityDashboard';\r\nimport ActivityDetails from '../../features/activities/details/ActivityDetails';\r\nimport ActivityForm from '../../features/activities/form/ActivityForm';\r\nimport NotFound from '../../features/errors/NotFound';\r\nimport TestError from '../../features/errors/TestError';\r\nimport HomePage from '../../features/home/HomePage';\r\nimport ProfilePage from '../../features/profiles/ProfilePage';\r\nimport ServerError from '../../features/errors/ServerError';\r\nimport ModalContainer from '../common/modals/ModalContainer';\r\nimport { useStore } from '../stores/store';\r\nimport LoadingComponent from './LoadingComponent';\r\nimport NavBar from './NavBar';\r\nimport PrivateRoute from './PrivateRoute';\r\nimport './styles.css';\r\n\r\nfunction App() {\r\n  const location = useLocation();\r\n  const { commonStore, userStore } = useStore();\r\n\r\n  useEffect(() => {\r\n    if (commonStore.token) {\r\n      userStore.getUser().finally(() => commonStore.setAppLoaded())\r\n    } else {\r\n      userStore.getFacebookLoginStatus().then(() => commonStore.setAppLoaded());\r\n    }\r\n  }, [commonStore, userStore])\r\n\r\n  if (!commonStore.appLoaded) return <LoadingComponent content='Loading App...' />\r\n\r\n  return (\r\n    <>\r\n      <ToastContainer position='bottom-right' hideProgressBar />\r\n      <ModalContainer />\r\n      <Route exact path='/' component={HomePage} />\r\n      <Route\r\n        path={'/(.+)'}\r\n        render={() => (\r\n          <>\r\n            <NavBar />\r\n            <Container style={{ marginTop: '7em' }}>\r\n              <Switch>\r\n                <PrivateRoute exact path='/activities' component={ActivityDashboard} />\r\n                <PrivateRoute path='/activities/:id' component={ActivityDetails} />\r\n                <PrivateRoute key={location.key} path={['/createActivity', '/manage/:id']} component={ActivityForm} />\r\n                <PrivateRoute path='/profiles/:username' component={ProfilePage} />\r\n                <PrivateRoute path='/errors' component={TestError} />\r\n                <Route path='/server-error' component={ServerError} />\r\n                <Route component={NotFound} />\r\n              </Switch>\r\n            </Container>\r\n          </>\r\n        )}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default observer(App);","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { useEffect } from 'react';\r\nimport { useLocation } from 'react-router';\r\n\r\nexport default function ScrollToTop() {\r\n    const { pathname } = useLocation();\r\n\r\n    useEffect(() => {\r\n        window.scrollTo(0, 0);\r\n    }, [pathname])\r\n\r\n    return null;\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'semantic-ui-css/semantic.min.css'\r\nimport 'react-calendar/dist/Calendar.css'\r\nimport 'react-toastify/dist/ReactToastify.min.css'\r\nimport './app/layout/styles.css'\r\nimport 'react-datepicker/dist/react-datepicker.css'\r\nimport App from './app/layout/App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { store, StoreContext } from './app/stores/store';\r\nimport { Router } from 'react-router-dom';\r\nimport { createBrowserHistory } from 'history';\r\nimport ScrollToTop from './app/layout/ScrollToTop';\r\n\r\nexport const history = createBrowserHistory();\r\n\r\nReactDOM.render(\r\n  <StoreContext.Provider value={store}>\r\n    <Router history={history}>\r\n      <ScrollToTop />\r\n      <App />\r\n    </Router>\r\n  </StoreContext.Provider>,\r\n  document.getElementById('root')\r\n);\r\nreportWebVitals();"],"sourceRoot":""}